{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0","program":"/home/fury/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","blake3","--edition=2018","/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"digest\"","--cfg","feature=\"std\"","--cfg","feature=\"traits-preview\"","-C","metadata=7619f13552c0d596","-C","extra-filename=-7619f13552c0d596","--out-dir","/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps","-L","dependency=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps","--extern","arrayref=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libarrayref-be81d846e1449da5.rmeta","--extern","arrayvec=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libarrayvec-aed7f1b815f44a51.rmeta","--extern","cfg_if=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libcfg_if-5b9b3cb1bf3d00dc.rmeta","--extern","constant_time_eq=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libconstant_time_eq-22d60b8156f92f23.rmeta","--extern","digest=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libdigest-c61a7d5451f25b19.rmeta","--cap-lints","allow","-L","native=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/build/blake3-991c401914a7bbfe/out","-L","native=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/build/blake3-991c401914a7bbfe/out","--cfg","blake3_sse2_ffi","--cfg","blake3_sse41_ffi","--cfg","blake3_avx2_ffi","--cfg","blake3_avx512_ffi","-l","static=blake3_sse2_sse41_avx2_assembly","-l","static=blake3_avx512_assembly","--error-format=json","--sysroot","/home/fury/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libblake3-7619f13552c0d596.rmeta"},"prelude":{"crate_id":{"name":"blake3","disambiguator":[5567498973054613307,0]},"crate_root":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src","external_crates":[{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","num":20,"id":{"name":"arrayref","disambiguator":[10252838635945512197,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":21,"id":{"name":"digest","disambiguator":[18198021373095352432,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":22,"id":{"name":"generic_array","disambiguator":[1073028785072075367,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":23,"id":{"name":"serde","disambiguator":[15198278077471077582,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":24,"id":{"name":"serde_derive","disambiguator":[7313136997057164943,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":25,"id":{"name":"typenum","disambiguator":[18190153633746893416,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":26,"id":{"name":"crypto_common","disambiguator":[12308971692002591509,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":27,"id":{"name":"block_buffer","disambiguator":[1934734921884845487,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","num":28,"id":{"name":"subtle","disambiguator":[7118613607296887452,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":29,"id":{"name":"arrayvec","disambiguator":[5576362335144698782,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","num":30,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","num":31,"id":{"name":"constant_time_eq","disambiguator":[3474216550925622466,0]}}],"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":0,"byte_end":57649,"line_start":1,"line_end":1463,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92592,"byte_end":92598,"line_start":4,"line_end":4,"column_start":9,"column_end":15},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":228}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":0,"byte_end":57649,"line_start":1,"line_end":1463,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":12},{"krate":0,"index":69},{"krate":0,"index":89},{"krate":0,"index":117},{"krate":0,"index":172},{"krate":0,"index":200},{"krate":0,"index":228},{"krate":0,"index":273},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":683},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":344},{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":712},{"krate":0,"index":720},{"krate":0,"index":380},{"krate":0,"index":722},{"krate":0,"index":731},{"krate":0,"index":385},{"krate":0,"index":394},{"krate":0,"index":737},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":761},{"krate":0,"index":766},{"krate":0,"index":423},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":446},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456}],"decl_id":null,"docs":" The official Rust implementation of the [BLAKE3] cryptographic hash\n function.","sig":null,"attributes":[{"value":"/ The official Rust implementation of the [BLAKE3] cryptographic hash","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ function.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":72,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":90,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":105,"byte_end":108,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":109,"byte_end":116,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":117,"byte_end":176,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/ // Hash an input all at once.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":177,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"/ let hash1 = blake3::hash(b\"foobarbaz\");","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":211,"byte_end":254,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":255,"byte_end":258,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":259,"byte_end":294,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":295,"byte_end":338,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":339,"byte_end":365,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":366,"byte_end":392,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":393,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ let hash2 = hasher.finalize();","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":420,"byte_end":454,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(hash1, hash2);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":455,"byte_end":484,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":485,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":489,"byte_end":556,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":557,"byte_end":588,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":589,"byte_end":620,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":621,"byte_end":671,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":672,"byte_end":708,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], hash1.as_bytes());","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":709,"byte_end":757,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":758,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":766,"byte_end":769,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Print a hash as hex.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":770,"byte_end":797,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ println!(\"{}\", hash1);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":798,"byte_end":824,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":825,"byte_end":837,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":838,"byte_end":845,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":846,"byte_end":853,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":854,"byte_end":857,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Cargo Features","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":858,"byte_end":878,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":879,"byte_end":882,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `std` feature (the only feature enabled by default) is required for","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":883,"byte_end":958,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ implementations of the [`Write`] and [`Seek`] traits, and also for runtime","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":959,"byte_end":1037,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ CPU feature detection on x86. If this feature is disabled, the only way to","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1038,"byte_end":1116,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ use the x86 SIMD implementations is to enable the corresponding instruction","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1117,"byte_end":1196,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ sets globally, with e.g. `RUSTFLAGS=\"-C target-cpu=native\"`. The resulting","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1197,"byte_end":1275,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ binary will not be portable to other machines.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1276,"byte_end":1326,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1327,"byte_end":1330,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The `rayon` feature (disabled by default, but enabled for [docs.rs]) adds","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1331,"byte_end":1408,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ the [`Hasher::update_rayon`] method, for multithreaded hashing. However,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1409,"byte_end":1485,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ even if this feature is enabled, all other APIs remain single-threaded.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1486,"byte_end":1561,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1562,"byte_end":1565,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The NEON implementation is enabled by default for AArch64 but requires the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1566,"byte_end":1644,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ `neon` feature for other ARM targets. Not all ARMv7 CPUs support NEON, and","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1645,"byte_end":1723,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ enabling this feature will produce a binary that's not portable to CPUs","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1724,"byte_end":1799,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ without NEON support.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1800,"byte_end":1825,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1826,"byte_end":1829,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `traits-preview` feature enables implementations of traits from the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1830,"byte_end":1905,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ RustCrypto [`digest`] crate, and re-exports that crate as","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1906,"byte_end":1967,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/ `traits::digest`. However, the traits aren't stable, and they're expected to","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":1968,"byte_end":2048,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ change in incompatible ways before that crate reaches 1.0. For that reason,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2049,"byte_end":2128,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ this crate makes no SemVer guarantees for this feature, and callers who use","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2129,"byte_end":2208,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ it should expect breaking changes between patch versions. (The \"-preview\"","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2209,"byte_end":2286,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ feature name follows the conventions of the RustCrypto [`signature`] crate.)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2287,"byte_end":2367,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2368,"byte_end":2371,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update_rayon`]: struct.Hasher.html#method.update_rayon","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2372,"byte_end":2440,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [BLAKE3]: https://blake3.io","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2441,"byte_end":2472,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ [Rayon]: https://github.com/rayon-rs/rayon","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2473,"byte_end":2519,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/ [docs.rs]: https://docs.rs/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2520,"byte_end":2551,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2552,"byte_end":2616,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ [`Seek`]: https://doc.rust-lang.org/std/io/trait.Seek.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2617,"byte_end":2679,"line_start":64,"line_end":64,"column_start":1,"column_end":63}},{"value":"/ [`digest`]: https://crates.io/crates/digest","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2680,"byte_end":2727,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/ [`signature`]: https://crates.io/crates/signature","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":2728,"byte_end":2781,"line_start":66,"line_end":66,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"guts","qualname":"::guts","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":6},{"krate":0,"index":11}],"decl_id":null,"docs":" This undocumented and unstable module is for use cases like the `bao` crate,\n which need to traverse the BLAKE3 Merkle tree and work with chunk and parent\n chaining values directly. There might be breaking changes to this module\n between patch versions.","sig":null,"attributes":[{"value":"/ This undocumented and unstable module is for use cases like the `bao` crate,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":57651,"byte_end":57731,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ which need to traverse the BLAKE3 Merkle tree and work with chunk and parent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":57732,"byte_end":57812,"line_start":2,"line_end":2,"column_start":1,"column_end":81}},{"value":"/ chaining values directly. There might be breaking changes to this module","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":57813,"byte_end":57889,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ between patch versions.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":57890,"byte_end":57917,"line_start":4,"line_end":4,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":57918,"byte_end":57921,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ We could stabilize something like this module in the future. If you have a","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":57922,"byte_end":58000,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ use case for it, please let us know by filing a GitHub issue.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58001,"byte_end":58066,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":4},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58078,"byte_end":58087,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"BLOCK_LEN","qualname":"::guts::BLOCK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58111,"byte_end":58120,"line_start":10,"line_end":10,"column_start":11,"column_end":20},"name":"CHUNK_LEN","qualname":"::guts::CHUNK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58172,"byte_end":58182,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ChunkState","qualname":"::guts::ChunkState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58376,"byte_end":58379,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<ChunkState>::new","value":"pub fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58604,"byte_end":58607,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"len","qualname":"<ChunkState>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58583,"byte_end":58592,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58679,"byte_end":58685,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"update","qualname":"<ChunkState>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58658,"byte_end":58667,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58787,"byte_end":58795,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ChunkState>::finalize","value":"pub fn finalize(&Self, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":59145,"byte_end":59154,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"parent_cv","qualname":"::guts::parent_cv","value":"pub fn parent_cv(&crate::Hash, &crate::Hash, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"platform","qualname":"::platform","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":33},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":61},{"krate":0,"index":65}],"decl_id":null,"docs":" Undocumented and unstable, for benchmarks only.\n","sig":null,"attributes":[{"value":"/ Undocumented and unstable, for benchmarks only.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":3133,"byte_end":3184,"line_start":80,"line_end":80,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":465},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":60709,"byte_end":60724,"line_start":8,"line_end":8,"column_start":27,"column_end":42},"name":"MAX_SIMD_DEGREE","qualname":"::platform::MAX_SIMD_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":466},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61446,"byte_end":61466,"line_start":28,"line_end":28,"column_start":27,"column_end":47},"name":"MAX_SIMD_DEGREE_OR_2","qualname":"::platform::MAX_SIMD_DEGREE_OR_2","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61798,"byte_end":61806,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Portable","qualname":"::platform::Platform::Portable","value":"Platform::Portable","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":470},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61873,"byte_end":61877,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"SSE2","qualname":"::platform::Platform::SSE2","value":"Platform::SSE2","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61812,"byte_end":61868,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":472},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61944,"byte_end":61949,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"SSE41","qualname":"::platform::Platform::SSE41","value":"Platform::SSE41","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61883,"byte_end":61939,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62016,"byte_end":62020,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"AVX2","qualname":"::platform::Platform::AVX2","value":"Platform::AVX2","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61955,"byte_end":62011,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":476},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62117,"byte_end":62123,"line_start":51,"line_end":51,"column_start":5,"column_end":11},"name":"AVX512","qualname":"::platform::Platform::AVX512","value":"Platform::AVX512","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62026,"byte_end":62051,"line_start":49,"line_end":49,"column_start":5,"column_end":30}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62056,"byte_end":62112,"line_start":50,"line_end":50,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":467},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":61783,"byte_end":61791,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"Platform","qualname":"::platform::Platform","value":"pub enum Platform { Portable, SSE2, SSE41, AVX2, AVX512, }","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62220,"byte_end":62226,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"detect","qualname":"<Platform>::detect","value":"pub fn detect() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unreachable_code)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62182,"byte_end":62208,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":63013,"byte_end":63024,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"simd_degree","qualname":"<Platform>::simd_degree","value":"pub fn simd_degree(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":63723,"byte_end":63740,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"compress_in_place","qualname":"<Platform>::compress_in_place","value":"pub fn compress_in_place(&Self, &mut CVWords, &[u8; ], u8, u64, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":65116,"byte_end":65128,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"compress_xof","qualname":"<Platform>::compress_xof","value":"pub fn compress_xof(&Self, &CVWords, &[u8; ], u8, u64, u8) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":67047,"byte_end":67056,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"hash_many","qualname":"<Platform>::hash_many","value":"pub fn hash_many<const N:\n                 usize>(&Self, &[&[u8; ]], &CVWords, u64, IncrementCounter,\n                        u8, u8, u8, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70115,"byte_end":70123,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"portable","qualname":"<Platform>::portable","value":"pub fn portable() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70238,"byte_end":70242,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"sse2","qualname":"<Platform>::sse2","value":"pub fn sse2() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70170,"byte_end":70226,"line_start":281,"line_end":281,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70444,"byte_end":70449,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"sse41","qualname":"<Platform>::sse41","value":"pub fn sse41() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70376,"byte_end":70432,"line_start":290,"line_end":290,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70653,"byte_end":70657,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"avx2","qualname":"<Platform>::avx2","value":"pub fn avx2() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70585,"byte_end":70641,"line_start":299,"line_end":299,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70889,"byte_end":70895,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"avx512","qualname":"<Platform>::avx512","value":"pub fn avx512() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70791,"byte_end":70816,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":70821,"byte_end":70877,"line_start":309,"line_end":309,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":71386,"byte_end":71401,"line_start":330,"line_end":330,"column_start":8,"column_end":23},"name":"avx512_detected","qualname":"::platform::avx512_detected","value":"pub fn avx512_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":71278,"byte_end":71303,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":71304,"byte_end":71360,"line_start":328,"line_end":328,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":71361,"byte_end":71378,"line_start":329,"line_end":329,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":71985,"byte_end":71998,"line_start":352,"line_end":352,"column_start":8,"column_end":21},"name":"avx2_detected","qualname":"::platform::avx2_detected","value":"pub fn avx2_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":71903,"byte_end":71959,"line_start":350,"line_end":350,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":71960,"byte_end":71977,"line_start":351,"line_end":351,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":72500,"byte_end":72514,"line_start":374,"line_end":374,"column_start":8,"column_end":22},"name":"sse41_detected","qualname":"::platform::sse41_detected","value":"pub fn sse41_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":72418,"byte_end":72474,"line_start":372,"line_end":372,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":72475,"byte_end":72492,"line_start":373,"line_end":373,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":73048,"byte_end":73061,"line_start":397,"line_end":397,"column_start":8,"column_end":21},"name":"sse2_detected","qualname":"::platform::sse2_detected","value":"pub fn sse2_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":72939,"byte_end":72995,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":72996,"byte_end":73013,"line_start":395,"line_end":395,"column_start":1,"column_end":18}},{"value":"allow(unreachable_code)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":73014,"byte_end":73040,"line_start":396,"line_end":396,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":73506,"byte_end":73528,"line_start":418,"line_end":418,"column_start":8,"column_end":30},"name":"words_from_le_bytes_32","qualname":"::platform::words_from_le_bytes_32","value":"pub fn words_from_le_bytes_32(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":73481,"byte_end":73498,"line_start":417,"line_end":417,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":74127,"byte_end":74149,"line_start":432,"line_end":432,"column_start":8,"column_end":30},"name":"words_from_le_bytes_64","qualname":"::platform::words_from_le_bytes_64","value":"pub fn words_from_le_bytes_64(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":74102,"byte_end":74119,"line_start":431,"line_end":431,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":75266,"byte_end":75288,"line_start":454,"line_end":454,"column_start":8,"column_end":30},"name":"le_bytes_from_words_32","qualname":"::platform::le_bytes_from_words_32","value":"pub fn le_bytes_from_words_32(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":75241,"byte_end":75258,"line_start":453,"line_end":453,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":75872,"byte_end":75894,"line_start":468,"line_end":468,"column_start":8,"column_end":30},"name":"le_bytes_from_words_64","qualname":"::platform::le_bytes_from_words_64","value":"pub fn le_bytes_from_words_64(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":75847,"byte_end":75864,"line_start":467,"line_end":467,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":228},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270}],"decl_id":null,"docs":" Implementations of commonly used traits like `Digest` and `Mac` from the\n [`digest`](https://crates.io/crates/digest) crate.\n","sig":null,"attributes":[{"value":"cfg(feature = \"traits-preview\")","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":3834,"byte_end":3868,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ Implementations of commonly used traits like `Digest` and `Mac` from the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92451,"byte_end":92527,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ [`digest`](https://crates.io/crates/digest) crate.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92528,"byte_end":92582,"line_start":2,"line_end":2,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":317},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":4145,"byte_end":4152,"line_start":124,"line_end":124,"column_start":11,"column_end":18},"name":"OUT_LEN","qualname":"::OUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a [`Hash`](struct.Hash.html), 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a [`Hash`](struct.Hash.html), 32.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":4074,"byte_end":4134,"line_start":123,"line_end":123,"column_start":1,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":318},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":4215,"byte_end":4222,"line_start":127,"line_end":127,"column_start":11,"column_end":18},"name":"KEY_LEN","qualname":"::KEY_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a key, 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a key, 32.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":4167,"byte_end":4204,"line_start":126,"line_end":126,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":683},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7259,"byte_end":7263,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"","parent":null,"children":[],"decl_id":null,"docs":" An output of the default size, 32 bytes, which provides constant-time\n equality checking.","sig":null,"attributes":[{"value":"/ An output of the default size, 32 bytes, which provides constant-time","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":5962,"byte_end":6035,"line_start":176,"line_end":176,"column_start":1,"column_end":74}},{"value":"/ equality checking.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6036,"byte_end":6058,"line_start":177,"line_end":177,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6059,"byte_end":6062,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ `Hash` implements [`From`] and [`Into`] for `[u8; 32]`, and it provides an","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6063,"byte_end":6141,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/ explicit [`as_bytes`] method returning `&[u8; 32]`. However, byte arrays","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6142,"byte_end":6218,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ and slices don't provide constant-time equality checking, which is often a","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6219,"byte_end":6297,"line_start":181,"line_end":181,"column_start":1,"column_end":79}},{"value":"/ security requirement in software that handles private data. `Hash` doesn't","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6298,"byte_end":6376,"line_start":182,"line_end":182,"column_start":1,"column_end":79}},{"value":"/ implement [`Deref`] or [`AsRef`], to avoid situations where a type","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6377,"byte_end":6447,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"/ conversion happens implicitly and the constant-time property is","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6448,"byte_end":6515,"line_start":184,"line_end":184,"column_start":1,"column_end":68}},{"value":"/ accidentally lost.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6516,"byte_end":6538,"line_start":185,"line_end":185,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6539,"byte_end":6542,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ `Hash` provides the [`to_hex`] and [`from_hex`] methods for converting to","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6543,"byte_end":6620,"line_start":187,"line_end":187,"column_start":1,"column_end":78}},{"value":"/ and from hexadecimal. It also implements [`Display`] and [`FromStr`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6621,"byte_end":6694,"line_start":188,"line_end":188,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6695,"byte_end":6698,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`From`]: https://doc.rust-lang.org/std/convert/trait.From.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6699,"byte_end":6766,"line_start":190,"line_end":190,"column_start":1,"column_end":68}},{"value":"/ [`Into`]: https://doc.rust-lang.org/std/convert/trait.Into.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6767,"byte_end":6834,"line_start":191,"line_end":191,"column_start":1,"column_end":68}},{"value":"/ [`as_bytes`]: #method.as_bytes","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6835,"byte_end":6869,"line_start":192,"line_end":192,"column_start":1,"column_end":35}},{"value":"/ [`Deref`]: https://doc.rust-lang.org/stable/std/ops/trait.Deref.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6870,"byte_end":6942,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"/ [`AsRef`]: https://doc.rust-lang.org/std/convert/trait.AsRef.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":6943,"byte_end":7012,"line_start":194,"line_end":194,"column_start":1,"column_end":70}},{"value":"/ [`to_hex`]: #method.to_hex","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7013,"byte_end":7043,"line_start":195,"line_end":195,"column_start":1,"column_end":31}},{"value":"/ [`from_hex`]: #method.from_hex","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7044,"byte_end":7078,"line_start":196,"line_end":196,"column_start":1,"column_end":35}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7079,"byte_end":7148,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"/ [`FromStr`]: https://doc.rust-lang.org/std/str/trait.FromStr.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7149,"byte_end":7218,"line_start":198,"line_end":198,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7499,"byte_end":7507,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The raw bytes of the `Hash`. Note that byte arrays don't provide\n constant-time equality checking, so if  you need to compare hashes,\n prefer the `Hash` type.\n","sig":null,"attributes":[{"value":"/ The raw bytes of the `Hash`. Note that byte arrays don't provide","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7297,"byte_end":7365,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ constant-time equality checking, so if  you need to compare hashes,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7370,"byte_end":7441,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/ prefer the `Hash` type.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7446,"byte_end":7473,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7478,"byte_end":7487,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7975,"byte_end":7981,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"pub fn to_hex(&Self) -> ArrayString<>","parent":null,"children":[],"decl_id":null,"docs":" Encode a `Hash` in lowercase hexadecimal.","sig":null,"attributes":[{"value":"/ Encode a `Hash` in lowercase hexadecimal.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7562,"byte_end":7607,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7612,"byte_end":7615,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The returned [`ArrayString`] is a fixed size and doesn't allocate memory","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7620,"byte_end":7696,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ on the heap. Note that [`ArrayString`] doesn't provide constant-time","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7701,"byte_end":7773,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ equality checking, so if you need to compare hashes, prefer the `Hash`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7778,"byte_end":7852,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ type.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7857,"byte_end":7866,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7871,"byte_end":7874,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`ArrayString`]: https://docs.rs/arrayvec/0.5.1/arrayvec/struct.ArrayString.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7879,"byte_end":7963,"line_start":218,"line_end":218,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8699,"byte_end":8707,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"from_hex","qualname":"<Hash>::from_hex","value":"pub fn from_hex<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>)\n-> Result<Self, HexError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a `Hash` from hexadecimal. Both uppercase and lowercase ASCII\n bytes are supported.","sig":null,"attributes":[{"value":"/ Decode a `Hash` from hexadecimal. Both uppercase and lowercase ASCII","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8278,"byte_end":8350,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ bytes are supported.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8355,"byte_end":8379,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8384,"byte_end":8387,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Any byte outside the ranges `'0'...'9'`, `'a'...'f'`, and `'A'...'F'`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8392,"byte_end":8465,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ results in an error. An input length other than 64 also results in an","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8470,"byte_end":8543,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ error.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8548,"byte_end":8558,"line_start":234,"line_end":234,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8563,"byte_end":8566,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that `Hash` also implements `FromStr`, so `Hash::from_hex(\"...\")`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8571,"byte_end":8645,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ is equivalent to `\"...\".parse()`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":8650,"byte_end":8687,"line_start":237,"line_end":237,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11710,"byte_end":11718,"line_start":337,"line_end":337,"column_start":12,"column_end":20},"name":"HexError","qualname":"::HexError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type for [`Hash::from_hex`].","sig":null,"attributes":[{"value":"/ The error type for [`Hash::from_hex`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11383,"byte_end":11425,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11426,"byte_end":11429,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ The `.to_string()` representation of this error currently distinguishes between bad length","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11430,"byte_end":11524,"line_start":333,"line_end":333,"column_start":1,"column_end":95}},{"value":"/ errors and bad character errors. This is to help with logging and debugging, but it isn't a","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11525,"byte_end":11620,"line_start":334,"line_end":334,"column_start":1,"column_end":96}},{"value":"/ stable API detail, and it may change at any time.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11621,"byte_end":11674,"line_start":335,"line_end":335,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":738},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":18020,"byte_end":18023,"line_start":539,"line_end":539,"column_start":5,"column_end":8},"name":"Yes","qualname":"::IncrementCounter::Yes","value":"IncrementCounter::Yes","parent":{"krate":0,"index":737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":740},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":18029,"byte_end":18031,"line_start":540,"line_end":540,"column_start":5,"column_end":7},"name":"No","qualname":"::IncrementCounter::No","value":"IncrementCounter::No","parent":{"krate":0,"index":737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":737},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":17997,"byte_end":18013,"line_start":538,"line_end":538,"column_start":10,"column_end":26},"name":"IncrementCounter","qualname":"::IncrementCounter","value":"pub enum IncrementCounter { Yes, No, }","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":740}],"decl_id":null,"docs":" Undocumented and unstable, for benchmarks only.\n","sig":null,"attributes":[{"value":"/ Undocumented and unstable, for benchmarks only.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":17898,"byte_end":17949,"line_start":535,"line_end":535,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":416},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28934,"byte_end":28938,"line_start":810,"line_end":810,"column_start":8,"column_end":12},"name":"hash","qualname":"::hash","value":"pub fn hash(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The default hash function.","sig":null,"attributes":[{"value":"/ The default hash function.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28551,"byte_end":28581,"line_start":800,"line_end":800,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28582,"byte_end":28585,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ For an incremental version that accepts multiple writes, see","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28586,"byte_end":28650,"line_start":802,"line_end":802,"column_start":1,"column_end":65}},{"value":"/ [`Hasher::update`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28651,"byte_end":28674,"line_start":803,"line_end":803,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28675,"byte_end":28678,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ For output sizes other than 32 bytes, see [`Hasher::finalize_xof`] and","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28679,"byte_end":28753,"line_start":805,"line_end":805,"column_start":1,"column_end":75}},{"value":"/ [`OutputReader`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28754,"byte_end":28775,"line_start":806,"line_end":806,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28776,"byte_end":28779,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multithreading support, see","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28780,"byte_end":28856,"line_start":808,"line_end":808,"column_start":1,"column_end":77}},{"value":"/ [`Hasher::update_rayon`](struct.Hasher.html#method.update_rayon).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":28857,"byte_end":28926,"line_start":809,"line_end":809,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29698,"byte_end":29708,"line_start":828,"line_end":828,"column_start":8,"column_end":18},"name":"keyed_hash","qualname":"::keyed_hash","value":"pub fn keyed_hash(&[u8; ], &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The keyed hash function.","sig":null,"attributes":[{"value":"/ The keyed hash function.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29033,"byte_end":29061,"line_start":814,"line_end":814,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29062,"byte_end":29065,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ This is suitable for use as a message authentication code, for example to","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29066,"byte_end":29143,"line_start":816,"line_end":816,"column_start":1,"column_end":78}},{"value":"/ replace an HMAC instance. In that use case, the constant-time equality","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29144,"byte_end":29218,"line_start":817,"line_end":817,"column_start":1,"column_end":75}},{"value":"/ checking provided by [`Hash`](struct.Hash.html) is almost always a security","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29219,"byte_end":29298,"line_start":818,"line_end":818,"column_start":1,"column_end":80}},{"value":"/ requirement, and callers need to be careful not to compare MACs as raw","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29299,"byte_end":29373,"line_start":819,"line_end":819,"column_start":1,"column_end":75}},{"value":"/ bytes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29374,"byte_end":29384,"line_start":820,"line_end":820,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29385,"byte_end":29388,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ For output sizes other than 32 bytes, see [`Hasher::new_keyed`],","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29389,"byte_end":29457,"line_start":822,"line_end":822,"column_start":1,"column_end":69}},{"value":"/ [`Hasher::finalize_xof`], and [`OutputReader`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29458,"byte_end":29509,"line_start":823,"line_end":823,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29510,"byte_end":29513,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multithreading support, see","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29514,"byte_end":29590,"line_start":825,"line_end":825,"column_start":1,"column_end":77}},{"value":"/ [`Hasher::new_keyed`] and","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29591,"byte_end":29620,"line_start":826,"line_end":826,"column_start":1,"column_end":30}},{"value":"/ [`Hasher::update_rayon`](struct.Hasher.html#method.update_rayon).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29621,"byte_end":29690,"line_start":827,"line_end":827,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31947,"byte_end":31957,"line_start":868,"line_end":868,"column_start":8,"column_end":18},"name":"derive_key","qualname":"::derive_key","value":"pub fn derive_key(&str, &[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The key derivation function.","sig":null,"attributes":[{"value":"/ The key derivation function.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29900,"byte_end":29932,"line_start":833,"line_end":833,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29933,"byte_end":29936,"line_start":834,"line_end":834,"column_start":1,"column_end":4}},{"value":"/ Given cryptographic key material of any length and a context string of any","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":29937,"byte_end":30015,"line_start":835,"line_end":835,"column_start":1,"column_end":79}},{"value":"/ length, this function outputs a 32-byte derived subkey. **The context string","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30016,"byte_end":30096,"line_start":836,"line_end":836,"column_start":1,"column_end":81}},{"value":"/ should be hardcoded, globally unique, and application-specific.** A good","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30097,"byte_end":30173,"line_start":837,"line_end":837,"column_start":1,"column_end":77}},{"value":"/ default format for such strings is `\"[application] [commit timestamp]","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30174,"byte_end":30247,"line_start":838,"line_end":838,"column_start":1,"column_end":74}},{"value":"/ [purpose]\"`, e.g., `\"example.com 2019-12-25 16:18:03 session tokens v1\"`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30248,"byte_end":30325,"line_start":839,"line_end":839,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30326,"byte_end":30329,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ Key derivation is important when you want to use the same key in multiple","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30330,"byte_end":30407,"line_start":841,"line_end":841,"column_start":1,"column_end":78}},{"value":"/ algorithms or use cases. Using the same key with different cryptographic","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30408,"byte_end":30484,"line_start":842,"line_end":842,"column_start":1,"column_end":77}},{"value":"/ algorithms is generally forbidden, and deriving a separate subkey for each","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30485,"byte_end":30563,"line_start":843,"line_end":843,"column_start":1,"column_end":79}},{"value":"/ use case protects you from bad interactions. Derived keys also mitigate the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30564,"byte_end":30643,"line_start":844,"line_end":844,"column_start":1,"column_end":80}},{"value":"/ damage from one part of your application accidentally leaking its key.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30644,"byte_end":30718,"line_start":845,"line_end":845,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30719,"byte_end":30722,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ As a rare exception to that general rule, however, it is possible to use","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30723,"byte_end":30799,"line_start":847,"line_end":847,"column_start":1,"column_end":77}},{"value":"/ `derive_key` itself with key material that you are already using with","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30800,"byte_end":30873,"line_start":848,"line_end":848,"column_start":1,"column_end":74}},{"value":"/ another algorithm. You might need to do this if you're adding features to","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30874,"byte_end":30951,"line_start":849,"line_end":849,"column_start":1,"column_end":78}},{"value":"/ an existing application, which does not yet use key derivation internally.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":30952,"byte_end":31030,"line_start":850,"line_end":850,"column_start":1,"column_end":79}},{"value":"/ However, you still must not share key material with algorithms that forbid","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31031,"byte_end":31109,"line_start":851,"line_end":851,"column_start":1,"column_end":79}},{"value":"/ key reuse entirely, like a one-time pad. For more on this, see sections 6.2","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31110,"byte_end":31189,"line_start":852,"line_end":852,"column_start":1,"column_end":80}},{"value":"/ and 7.8 of the [BLAKE3 paper](https://github.com/BLAKE3-team/BLAKE3-specs/blob/master/blake3.pdf).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31190,"byte_end":31292,"line_start":853,"line_end":853,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31293,"byte_end":31296,"line_start":854,"line_end":854,"column_start":1,"column_end":4}},{"value":"/ Note that BLAKE3 is not a password hash, and **`derive_key` should never be","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31297,"byte_end":31376,"line_start":855,"line_end":855,"column_start":1,"column_end":80}},{"value":"/ used with passwords.** Instead, use a dedicated password hash like","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31377,"byte_end":31447,"line_start":856,"line_end":856,"column_start":1,"column_end":71}},{"value":"/ [Argon2]. Password hashes are entirely different from generic hash","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31448,"byte_end":31518,"line_start":857,"line_end":857,"column_start":1,"column_end":71}},{"value":"/ functions, with opposite design requirements.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31519,"byte_end":31568,"line_start":858,"line_end":858,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31569,"byte_end":31572,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ For output sizes other than 32 bytes, see [`Hasher::new_derive_key`],","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31573,"byte_end":31646,"line_start":860,"line_end":860,"column_start":1,"column_end":74}},{"value":"/ [`Hasher::finalize_xof`], and [`OutputReader`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31647,"byte_end":31698,"line_start":861,"line_end":861,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31699,"byte_end":31702,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multithreading support, see","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31703,"byte_end":31779,"line_start":863,"line_end":863,"column_start":1,"column_end":77}},{"value":"/ [`Hasher::new_derive_key`] and","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31780,"byte_end":31814,"line_start":864,"line_end":864,"column_start":1,"column_end":35}},{"value":"/ [`Hasher::update_rayon`](struct.Hasher.html#method.update_rayon).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31815,"byte_end":31884,"line_start":865,"line_end":865,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31885,"byte_end":31888,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ [Argon2]: https://en.wikipedia.org/wiki/Argon2","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":31889,"byte_end":31939,"line_start":867,"line_end":867,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":761},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34456,"byte_end":34462,"line_start":939,"line_end":939,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"decl_id":null,"docs":" An incremental hash state that can accept any number of writes.","sig":null,"attributes":[{"value":"/ An incremental hash state that can accept any number of writes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":32820,"byte_end":32887,"line_start":898,"line_end":898,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":32888,"byte_end":32891,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ When the `traits-preview` Cargo feature is enabled, this type implements","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":32892,"byte_end":32968,"line_start":900,"line_end":900,"column_start":1,"column_end":77}},{"value":"/ several commonly used traits from the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":32969,"byte_end":33010,"line_start":901,"line_end":901,"column_start":1,"column_end":42}},{"value":"/ [`digest`](https://crates.io/crates/digest) crate. However, those","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33011,"byte_end":33080,"line_start":902,"line_end":902,"column_start":1,"column_end":70}},{"value":"/ traits aren't stable, and they're expected to change in incompatible ways","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33081,"byte_end":33158,"line_start":903,"line_end":903,"column_start":1,"column_end":78}},{"value":"/ before that crate reaches 1.0. For that reason, this crate makes no SemVer","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33159,"byte_end":33237,"line_start":904,"line_end":904,"column_start":1,"column_end":79}},{"value":"/ guarantees for this feature, and callers who use it should expect breaking","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33238,"byte_end":33316,"line_start":905,"line_end":905,"column_start":1,"column_end":79}},{"value":"/ changes between patch versions.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33317,"byte_end":33352,"line_start":906,"line_end":906,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33353,"byte_end":33356,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ When the `rayon` Cargo feature is enabled, the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33357,"byte_end":33407,"line_start":908,"line_end":908,"column_start":1,"column_end":51}},{"value":"/ [`update_rayon`](#method.update_rayon) method is available for multithreaded","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33408,"byte_end":33488,"line_start":909,"line_end":909,"column_start":1,"column_end":81}},{"value":"/ hashing.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33489,"byte_end":33501,"line_start":910,"line_end":910,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33502,"byte_end":33505,"line_start":911,"line_end":911,"column_start":1,"column_end":4}},{"value":"/ **Performance note:** The [`update`](#method.update) method can't take full","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33506,"byte_end":33585,"line_start":912,"line_end":912,"column_start":1,"column_end":80}},{"value":"/ advantage of SIMD optimizations if its input buffer is too small or oddly","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33586,"byte_end":33663,"line_start":913,"line_end":913,"column_start":1,"column_end":78}},{"value":"/ sized. Using a 16 KiB buffer, or any multiple of that, enables all currently","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33664,"byte_end":33744,"line_start":914,"line_end":914,"column_start":1,"column_end":81}},{"value":"/ supported SIMD instruction sets.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33745,"byte_end":33781,"line_start":915,"line_end":915,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33782,"byte_end":33785,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33786,"byte_end":33800,"line_start":917,"line_end":917,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33801,"byte_end":33804,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33805,"byte_end":33812,"line_start":919,"line_end":919,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33813,"byte_end":33872,"line_start":920,"line_end":920,"column_start":1,"column_end":60}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33873,"byte_end":33908,"line_start":921,"line_end":921,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33909,"byte_end":33952,"line_start":922,"line_end":922,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33953,"byte_end":33979,"line_start":923,"line_end":923,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":33980,"byte_end":34006,"line_start":924,"line_end":924,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34007,"byte_end":34033,"line_start":925,"line_end":925,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(hasher.finalize(), blake3::hash(b\"foobarbaz\"));","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34034,"byte_end":34096,"line_start":926,"line_end":926,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34097,"byte_end":34100,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34101,"byte_end":34168,"line_start":928,"line_end":928,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34169,"byte_end":34200,"line_start":929,"line_end":929,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34201,"byte_end":34232,"line_start":930,"line_end":930,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34233,"byte_end":34283,"line_start":931,"line_end":931,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34284,"byte_end":34320,"line_start":932,"line_end":932,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], blake3::hash(b\"foobarbaz\").as_bytes());","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34321,"byte_end":34390,"line_start":933,"line_end":933,"column_start":1,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34391,"byte_end":34398,"line_start":934,"line_end":934,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34399,"byte_end":34411,"line_start":935,"line_end":935,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34412,"byte_end":34419,"line_start":936,"line_end":936,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34420,"byte_end":34427,"line_start":937,"line_end":937,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35243,"byte_end":35246,"line_start":960,"line_end":960,"column_start":12,"column_end":15},"name":"new","qualname":"<Hasher>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the regular hash function.\n","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the regular hash function.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35172,"byte_end":35231,"line_start":959,"line_end":959,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35452,"byte_end":35461,"line_start":968,"line_end":968,"column_start":12,"column_end":21},"name":"new_keyed","qualname":"<Hasher>::new_keyed","value":"pub fn new_keyed(&[u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the keyed hash function. See\n [`keyed_hash`].","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the keyed hash function. See","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35304,"byte_end":35365,"line_start":964,"line_end":964,"column_start":5,"column_end":66}},{"value":"/ [`keyed_hash`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35370,"byte_end":35389,"line_start":965,"line_end":965,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35394,"byte_end":35397,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ [`keyed_hash`]: fn.keyed_hash.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35402,"byte_end":35440,"line_start":967,"line_end":967,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35861,"byte_end":35875,"line_start":978,"line_end":978,"column_start":12,"column_end":26},"name":"new_derive_key","qualname":"<Hasher>::new_derive_key","value":"pub fn new_derive_key(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the key derivation function. See\n [`derive_key`]. The context string should be hardcoded, globally\n unique, and application-specific.","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the key derivation function. See","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35618,"byte_end":35683,"line_start":973,"line_end":973,"column_start":5,"column_end":70}},{"value":"/ [`derive_key`]. The context string should be hardcoded, globally","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35688,"byte_end":35756,"line_start":974,"line_end":974,"column_start":5,"column_end":73}},{"value":"/ unique, and application-specific.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35761,"byte_end":35798,"line_start":975,"line_end":975,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35803,"byte_end":35806,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ [`derive_key`]: fn.derive_key.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":35811,"byte_end":35849,"line_start":977,"line_end":977,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":36418,"byte_end":36423,"line_start":990,"line_end":990,"column_start":12,"column_end":17},"name":"reset","qualname":"<Hasher>::reset","value":"pub fn reset(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the `Hasher` to its initial state.","sig":null,"attributes":[{"value":"/ Reset the `Hasher` to its initial state.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":36219,"byte_end":36263,"line_start":986,"line_end":986,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":36268,"byte_end":36271,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ This is functionally the same as overwriting the `Hasher` with a new","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":36276,"byte_end":36348,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ one, using the same key or context string if any.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":36353,"byte_end":36406,"line_start":989,"line_end":989,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":41036,"byte_end":41042,"line_start":1080,"line_end":1080,"column_start":12,"column_end":18},"name":"update","qualname":"<Hasher>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state. You can call this any number of\n times.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state. You can call this any number of","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40291,"byte_end":40361,"line_start":1066,"line_end":1066,"column_start":5,"column_end":75}},{"value":"/ times.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40366,"byte_end":40376,"line_start":1067,"line_end":1067,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40381,"byte_end":40384,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ This method is always single-threaded. For multithreading support, see","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40389,"byte_end":40463,"line_start":1069,"line_end":1069,"column_start":5,"column_end":79}},{"value":"/ [`update_rayon`](#method.update_rayon) below (enabled with the `rayon`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40468,"byte_end":40542,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/ Cargo feature).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40547,"byte_end":40566,"line_start":1071,"line_end":1071,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40571,"byte_end":40574,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ Note that the degree of SIMD parallelism that `update` can use is","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40579,"byte_end":40648,"line_start":1073,"line_end":1073,"column_start":5,"column_end":74}},{"value":"/ limited by the size of this input buffer. The 8 KiB buffer currently","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40653,"byte_end":40725,"line_start":1074,"line_end":1074,"column_start":5,"column_end":77}},{"value":"/ used by [`std::io::copy`] is enough to leverage AVX2, for example, but","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40730,"byte_end":40804,"line_start":1075,"line_end":1075,"column_start":5,"column_end":79}},{"value":"/ not enough to leverage AVX-512. A 16 KiB buffer is large enough to","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40809,"byte_end":40879,"line_start":1076,"line_end":1076,"column_start":5,"column_end":75}},{"value":"/ leverage all currently supported SIMD instruction sets.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40884,"byte_end":40943,"line_start":1077,"line_end":1077,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40948,"byte_end":40951,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":40956,"byte_end":41024,"line_start":1079,"line_end":1079,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51370,"byte_end":51378,"line_start":1287,"line_end":1287,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Hasher>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return the [`Hash`](struct.Hash.html) of\n the input.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return the [`Hash`](struct.Hash.html) of","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51124,"byte_end":51196,"line_start":1282,"line_end":1282,"column_start":5,"column_end":77}},{"value":"/ the input.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51201,"byte_end":51215,"line_start":1283,"line_end":1283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51220,"byte_end":51223,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51228,"byte_end":51302,"line_start":1285,"line_end":1285,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51307,"byte_end":51358,"line_start":1286,"line_end":1286,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51773,"byte_end":51785,"line_start":1298,"line_end":1298,"column_start":12,"column_end":24},"name":"finalize_xof","qualname":"<Hasher>::finalize_xof","value":"pub fn finalize_xof(&Self) -> OutputReader","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return an [`OutputReader`], which can\n supply any number of output bytes.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return an [`OutputReader`], which can","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51447,"byte_end":51516,"line_start":1291,"line_end":1291,"column_start":5,"column_end":74}},{"value":"/ supply any number of output bytes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51521,"byte_end":51559,"line_start":1292,"line_end":1292,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51564,"byte_end":51567,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51572,"byte_end":51646,"line_start":1294,"line_end":1294,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51651,"byte_end":51702,"line_start":1295,"line_end":1295,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51707,"byte_end":51710,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ [`OutputReader`]: struct.OutputReader.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51715,"byte_end":51761,"line_start":1297,"line_end":1297,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51932,"byte_end":51937,"line_start":1303,"line_end":1303,"column_start":12,"column_end":17},"name":"count","qualname":"<Hasher>::count","value":"pub fn count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes hashed so far.\n","sig":null,"attributes":[{"value":"/ Return the total number of bytes hashed so far.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":51869,"byte_end":51920,"line_start":1302,"line_end":1302,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":776},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53505,"byte_end":53517,"line_start":1354,"line_end":1354,"column_start":12,"column_end":24},"name":"OutputReader","qualname":"::OutputReader","value":"OutputReader {  }","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"decl_id":null,"docs":" An incremental reader for extended output, returned by\n [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).","sig":null,"attributes":[{"value":"/ An incremental reader for extended output, returned by","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52811,"byte_end":52869,"line_start":1340,"line_end":1340,"column_start":1,"column_end":59}},{"value":"/ [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52870,"byte_end":52939,"line_start":1341,"line_end":1341,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52940,"byte_end":52943,"line_start":1342,"line_end":1342,"column_start":1,"column_end":4}},{"value":"/ Outputs shorter than the default length of 32 bytes (256 bits)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52944,"byte_end":53010,"line_start":1343,"line_end":1343,"column_start":1,"column_end":67}},{"value":"/ provide less security. An N-bit BLAKE3 output is intended to provide","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53011,"byte_end":53083,"line_start":1344,"line_end":1344,"column_start":1,"column_end":73}},{"value":"/ N bits of first and second preimage resistance and N/2 bits of","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53084,"byte_end":53150,"line_start":1345,"line_end":1345,"column_start":1,"column_end":67}},{"value":"/ collision resistance, for any N up to 256. Longer outputs don't","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53151,"byte_end":53218,"line_start":1346,"line_end":1346,"column_start":1,"column_end":68}},{"value":"/ provide any additional security.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53219,"byte_end":53255,"line_start":1347,"line_end":1347,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53256,"byte_end":53259,"line_start":1348,"line_end":1348,"column_start":1,"column_end":4}},{"value":"/ Shorter BLAKE3 outputs are prefixes of longer ones. Explicitly","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53260,"byte_end":53326,"line_start":1349,"line_end":1349,"column_start":1,"column_end":67}},{"value":"/ requesting a short output is equivalent to truncating the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53327,"byte_end":53388,"line_start":1350,"line_end":1350,"column_start":1,"column_end":62}},{"value":"/ default-length output. (Note that this is different between BLAKE2","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53389,"byte_end":53459,"line_start":1351,"line_end":1351,"column_start":1,"column_end":71}},{"value":"/ and BLAKE3.)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53460,"byte_end":53476,"line_start":1352,"line_end":1352,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54544,"byte_end":54548,"line_start":1382,"line_end":1382,"column_start":12,"column_end":16},"name":"fill","qualname":"<OutputReader>::fill","value":"pub fn fill(&mut Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Fill a buffer with output bytes and advance the position of the\n `OutputReader`. This is equivalent to [`Read::read`], except that it\n doesn't return a `Result`. Both methods always fill the entire buffer.","sig":null,"attributes":[{"value":"/ Fill a buffer with output bytes and advance the position of the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53722,"byte_end":53789,"line_start":1367,"line_end":1367,"column_start":5,"column_end":72}},{"value":"/ `OutputReader`. This is equivalent to [`Read::read`], except that it","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53794,"byte_end":53866,"line_start":1368,"line_end":1368,"column_start":5,"column_end":77}},{"value":"/ doesn't return a `Result`. Both methods always fill the entire buffer.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53871,"byte_end":53945,"line_start":1369,"line_end":1369,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53950,"byte_end":53953,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ Note that `OutputReader` doesn't buffer output bytes internally, so","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53958,"byte_end":54029,"line_start":1371,"line_end":1371,"column_start":5,"column_end":76}},{"value":"/ calling `fill` repeatedly with a short-length or odd-length slice will","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54034,"byte_end":54108,"line_start":1372,"line_end":1372,"column_start":5,"column_end":79}},{"value":"/ end up performing the same compression multiple times. If you're","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54113,"byte_end":54181,"line_start":1373,"line_end":1373,"column_start":5,"column_end":73}},{"value":"/ reading output in a loop, prefer a slice length that's a multiple of","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54186,"byte_end":54258,"line_start":1374,"line_end":1374,"column_start":5,"column_end":77}},{"value":"/ 64.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54263,"byte_end":54270,"line_start":1375,"line_end":1375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54275,"byte_end":54278,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ The maximum output size of BLAKE3 is 2<sup>64</sup>-1 bytes. If you try","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54283,"byte_end":54358,"line_start":1377,"line_end":1377,"column_start":5,"column_end":80}},{"value":"/ to extract more than that, for example by seeking near the end and","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54363,"byte_end":54433,"line_start":1378,"line_end":1378,"column_start":5,"column_end":75}},{"value":"/ reading further, the behavior is unspecified.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54438,"byte_end":54487,"line_start":1379,"line_end":1379,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54492,"byte_end":54495,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":54500,"byte_end":54532,"line_start":1381,"line_end":1381,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55648,"byte_end":55656,"line_start":1406,"line_end":1406,"column_start":12,"column_end":20},"name":"position","qualname":"<OutputReader>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the current read position in the output stream. This is\n equivalent to [`Seek::stream_position`], except that it doesn't return\n a `Result`. The position of a new `OutputReader` starts at 0, and each\n call to [`fill`] or [`Read::read`] moves the position forward by the\n number of bytes read.","sig":null,"attributes":[{"value":"/ Return the current read position in the output stream. This is","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55170,"byte_end":55236,"line_start":1397,"line_end":1397,"column_start":5,"column_end":71}},{"value":"/ equivalent to [`Seek::stream_position`], except that it doesn't return","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55241,"byte_end":55315,"line_start":1398,"line_end":1398,"column_start":5,"column_end":79}},{"value":"/ a `Result`. The position of a new `OutputReader` starts at 0, and each","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55320,"byte_end":55394,"line_start":1399,"line_end":1399,"column_start":5,"column_end":79}},{"value":"/ call to [`fill`] or [`Read::read`] moves the position forward by the","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55399,"byte_end":55471,"line_start":1400,"line_end":1400,"column_start":5,"column_end":77}},{"value":"/ number of bytes read.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55476,"byte_end":55501,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55506,"byte_end":55509,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ [`Seek::stream_position`]: #method.stream_position","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55514,"byte_end":55568,"line_start":1403,"line_end":1403,"column_start":5,"column_end":59}},{"value":"/ [`fill`]: #method.fill","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55573,"byte_end":55599,"line_start":1404,"line_end":1404,"column_start":5,"column_end":31}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55604,"byte_end":55636,"line_start":1405,"line_end":1405,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":56086,"byte_end":56098,"line_start":1416,"line_end":1416,"column_start":12,"column_end":24},"name":"set_position","qualname":"<OutputReader>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Seek to a new read position in the output stream. This is equivalent to\n calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't\n return a `Result`.","sig":null,"attributes":[{"value":"/ Seek to a new read position in the output stream. This is equivalent to","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55766,"byte_end":55841,"line_start":1410,"line_end":1410,"column_start":5,"column_end":80}},{"value":"/ calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55846,"byte_end":55921,"line_start":1411,"line_end":1411,"column_start":5,"column_end":80}},{"value":"/ return a `Result`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55926,"byte_end":55948,"line_start":1412,"line_end":1412,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55953,"byte_end":55956,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ [`Seek::seek`]: #method.seek","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55961,"byte_end":55993,"line_start":1414,"line_end":1414,"column_start":5,"column_end":37}},{"value":"/ [`SeekFrom::Start`]: https://doc.rust-lang.org/std/io/enum.SeekFrom.html","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":55998,"byte_end":56074,"line_start":1415,"line_end":1415,"column_start":5,"column_end":81}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58209,"byte_end":58219,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62167,"byte_end":62175,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92749,"byte_end":92755,"line_start":10,"line_end":10,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92784,"byte_end":92790,"line_start":12,"line_end":12,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92906,"byte_end":92912,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93041,"byte_end":93047,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93109,"byte_end":93115,"line_start":30,"line_end":30,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93307,"byte_end":93313,"line_start":37,"line_end":37,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93538,"byte_end":93544,"line_start":45,"line_end":45,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93722,"byte_end":93728,"line_start":54,"line_end":54,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93922,"byte_end":93934,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":94067,"byte_end":94073,"line_start":70,"line_end":70,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":94130,"byte_end":94136,"line_start":74,"line_end":74,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":94166,"byte_end":94172,"line_start":76,"line_end":76,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/join.rs","byte_start":99164,"byte_end":99174,"line_start":39,"line_end":39,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7286,"byte_end":7290,"line_start":202,"line_end":202,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":9529,"byte_end":9533,"line_start":259,"line_end":259,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":9759,"byte_end":9763,"line_start":273,"line_end":273,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":9942,"byte_end":9946,"line_start":282,"line_end":282,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10154,"byte_end":10158,"line_start":290,"line_end":290,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10394,"byte_end":10398,"line_start":298,"line_end":298,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10536,"byte_end":10540,"line_start":305,"line_end":305,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10567,"byte_end":10571,"line_start":307,"line_end":307,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10972,"byte_end":10976,"line_start":319,"line_end":319,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11850,"byte_end":11858,"line_start":345,"line_end":345,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":12427,"byte_end":12435,"line_start":363,"line_end":363,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":12849,"byte_end":12855,"line_start":378,"line_end":378,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":13930,"byte_end":13940,"line_start":421,"line_end":421,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":16713,"byte_end":16723,"line_start":509,"line_end":509,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":18041,"byte_end":18057,"line_start":543,"line_end":543,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34932,"byte_end":34938,"line_start":950,"line_end":950,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52130,"byte_end":52136,"line_start":1309,"line_end":1309,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52391,"byte_end":52397,"line_start":1318,"line_end":1318,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52518,"byte_end":52524,"line_start":1326,"line_end":1326,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53578,"byte_end":53590,"line_start":1359,"line_end":1359,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":56345,"byte_end":56357,"line_start":1423,"line_end":1423,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":56585,"byte_end":56597,"line_start":1432,"line_end":1432,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":56783,"byte_end":56795,"line_start":1441,"line_end":1441,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":3126,"byte_end":3130,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":3208,"byte_end":3216,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":3877,"byte_end":3883,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":228}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/guts.rs","byte_start":58209,"byte_end":58219,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/platform.rs","byte_start":62167,"byte_end":62175,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92749,"byte_end":92755,"line_start":10,"line_end":10,"column_start":29,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":507}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92784,"byte_end":92790,"line_start":12,"line_end":12,"column_start":25,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":716}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":92906,"byte_end":92912,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":761},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93041,"byte_end":93047,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":761},"to":{"krate":26,"index":34}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93109,"byte_end":93115,"line_start":30,"line_end":30,"column_start":30,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":720}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93307,"byte_end":93313,"line_start":37,"line_end":37,"column_start":35,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":723}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93538,"byte_end":93544,"line_start":45,"line_end":45,"column_start":35,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":729}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93722,"byte_end":93728,"line_start":54,"line_end":54,"column_start":40,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":736}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":93922,"byte_end":93934,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":776},"to":{"krate":21,"index":726}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":94067,"byte_end":94073,"line_start":70,"line_end":70,"column_start":37,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":761},"to":{"krate":26,"index":36}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":94130,"byte_end":94136,"line_start":74,"line_end":74,"column_start":28,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":761},"to":{"krate":21,"index":608}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/traits.rs","byte_start":94166,"byte_end":94172,"line_start":76,"line_end":76,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":761},"to":{"krate":26,"index":46}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/join.rs","byte_start":99164,"byte_end":99174,"line_start":39,"line_end":39,"column_start":15,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":280},"to":{"krate":0,"index":274}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":7286,"byte_end":7290,"line_start":202,"line_end":202,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":9529,"byte_end":9533,"line_start":259,"line_end":259,"column_start":30,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":9759,"byte_end":9763,"line_start":273,"line_end":273,"column_start":29,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":9942,"byte_end":9946,"line_start":282,"line_end":282,"column_start":20,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10154,"byte_end":10158,"line_start":290,"line_end":290,"column_start":35,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10394,"byte_end":10398,"line_start":298,"line_end":298,"column_start":26,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10536,"byte_end":10540,"line_start":305,"line_end":305,"column_start":13,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10567,"byte_end":10571,"line_start":307,"line_end":307,"column_start":23,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":10972,"byte_end":10976,"line_start":319,"line_end":319,"column_start":21,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":11850,"byte_end":11858,"line_start":345,"line_end":345,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":12427,"byte_end":12435,"line_start":363,"line_end":363,"column_start":28,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":694},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":12849,"byte_end":12855,"line_start":378,"line_end":378,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":13930,"byte_end":13940,"line_start":421,"line_end":421,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":16713,"byte_end":16723,"line_start":509,"line_end":509,"column_start":21,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":18041,"byte_end":18057,"line_start":543,"line_end":543,"column_start":6,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":34932,"byte_end":34938,"line_start":950,"line_end":950,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52130,"byte_end":52136,"line_start":1309,"line_end":1309,"column_start":21,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52391,"byte_end":52397,"line_start":1318,"line_end":1318,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":52518,"byte_end":52524,"line_start":1326,"line_end":1326,"column_start":25,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":761},"to":{"krate":1,"index":4406}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":53578,"byte_end":53590,"line_start":1359,"line_end":1359,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":56345,"byte_end":56357,"line_start":1423,"line_end":1423,"column_start":21,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":56585,"byte_end":56597,"line_start":1432,"line_end":1432,"column_start":24,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":776},"to":{"krate":1,"index":4346}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-1.3.0/src/lib.rs","byte_start":56783,"byte_end":56795,"line_start":1441,"line_end":1441,"column_start":24,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":776},"to":{"krate":1,"index":4424}}]}