{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1","program":"/home/fury/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crypto_common","--edition=2018","/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=26cd88d9a7e3ab95","-C","extra-filename=-26cd88d9a7e3ab95","--out-dir","/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps","-L","dependency=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps","--extern","generic_array=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libgeneric_array-4b3cd778b572c97a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/fury/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libcrypto_common-26cd88d9a7e3ab95.rmeta"},"prelude":{"crate_id":{"name":"crypto_common","disambiguator":[12308971692002591509,0]},"crate_root":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src","external_crates":[{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":20,"id":{"name":"generic_array","disambiguator":[1073028785072075367,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":21,"id":{"name":"serde","disambiguator":[15198278077471077582,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":22,"id":{"name":"serde_derive","disambiguator":[7313136997057164943,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","num":23,"id":{"name":"typenum","disambiguator":[18190153633746893416,0]}}],"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":0,"byte_end":8446,"line_start":1,"line_end":277,"column_start":1,"column_end":44}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":0,"byte_end":8446,"line_start":1,"line_end":277,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":70},{"krate":0,"index":72}],"decl_id":null,"docs":" Common cryptographic traits.\n","sig":null,"attributes":[{"value":"/ Common cryptographic traits.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"no_std","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":34,"byte_end":44,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":340,"byte_end":363,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":364,"byte_end":404,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":717,"byte_end":722,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Block","qualname":"::Block","value":"GenericArray<u8, <B as BlockSizeUser>::BlockSize>","parent":null,"children":[],"decl_id":null,"docs":" Block on which [`BlockSizeUser`] implementors operate.\n","sig":null,"attributes":[{"value":"/ Block on which [`BlockSizeUser`] implementors operate.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":649,"byte_end":707,"line_start":24,"line_end":24,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":841,"byte_end":847,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Output","qualname":"::Output","value":"GenericArray<u8, <T as OutputSizeUser>::OutputSize>","parent":null,"children":[],"decl_id":null,"docs":" Output array of [`OutputSizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Output array of [`OutputSizeUser`] implementors.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":779,"byte_end":831,"line_start":26,"line_end":26,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":961,"byte_end":964,"line_start":29,"line_end":29,"column_start":10,"column_end":13},"name":"Key","qualname":"::Key","value":"GenericArray<u8, <B as KeySizeUser>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Key used by [`KeySizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Key used by [`KeySizeUser`] implementors.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":906,"byte_end":951,"line_start":28,"line_end":28,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1097,"byte_end":1099,"line_start":31,"line_end":31,"column_start":10,"column_end":12},"name":"Iv","qualname":"::Iv","value":"GenericArray<u8, <B as IvSizeUser>::IvSize>","parent":null,"children":[],"decl_id":null,"docs":" Initialization vector (nonce) used by [`IvSizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Initialization vector (nonce) used by [`IvSizeUser`] implementors.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1017,"byte_end":1087,"line_start":30,"line_end":30,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1201,"byte_end":1214,"line_start":34,"line_end":34,"column_start":11,"column_end":24},"name":"BlockSizeUser","qualname":"::BlockSizeUser","value":"BlockSizeUser","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" Types which process data in blocks.\n","sig":null,"attributes":[{"value":"/ Types which process data in blocks.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1151,"byte_end":1190,"line_start":33,"line_end":33,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1262,"byte_end":1271,"line_start":36,"line_end":36,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::BlockSizeUser::BlockSize","value":"type BlockSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Size of the block in bytes.\n","sig":null,"attributes":[{"value":"/ Size of the block in bytes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1221,"byte_end":1252,"line_start":35,"line_end":35,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1534,"byte_end":1548,"line_start":48,"line_end":48,"column_start":11,"column_end":25},"name":"OutputSizeUser","qualname":"::OutputSizeUser","value":"OutputSizeUser","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" Types which return data with the given size.\n","sig":null,"attributes":[{"value":"/ Types which return data with the given size.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1475,"byte_end":1523,"line_start":47,"line_end":47,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1597,"byte_end":1607,"line_start":50,"line_end":50,"column_start":10,"column_end":20},"name":"OutputSize","qualname":"::OutputSizeUser::OutputSize","value":"type OutputSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Size of the output in bytes.\n","sig":null,"attributes":[{"value":"/ Size of the output in bytes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1555,"byte_end":1587,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1766,"byte_end":1777,"line_start":56,"line_end":56,"column_start":11,"column_end":22},"name":"KeySizeUser","qualname":"::KeySizeUser","value":"KeySizeUser","parent":null,"children":[{"krate":0,"index":37}],"decl_id":null,"docs":" Types which use key for initialization.","sig":null,"attributes":[{"value":"/ Types which use key for initialization.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1639,"byte_end":1682,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1683,"byte_end":1686,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`KeyInit`] or [`KeyIvInit`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1687,"byte_end":1755,"line_start":55,"line_end":55,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1816,"byte_end":1823,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::KeySizeUser::KeySize","value":"type KeySize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Key size in bytes.\n","sig":null,"attributes":[{"value":"/ Key size in bytes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1784,"byte_end":1806,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2012,"byte_end":2022,"line_start":64,"line_end":64,"column_start":11,"column_end":21},"name":"IvSizeUser","qualname":"::IvSizeUser","value":"IvSizeUser","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" Types which use initialization vector (nonce) for initialization.","sig":null,"attributes":[{"value":"/ Types which use initialization vector (nonce) for initialization.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1855,"byte_end":1924,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1925,"byte_end":1928,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`KeyIvInit`] or [`InnerIvInit`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":1929,"byte_end":2001,"line_start":63,"line_end":63,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2079,"byte_end":2085,"line_start":66,"line_end":66,"column_start":10,"column_end":16},"name":"IvSize","qualname":"::IvSizeUser::IvSize","value":"type IvSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Initialization vector size in bytes.\n","sig":null,"attributes":[{"value":"/ Initialization vector size in bytes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2029,"byte_end":2069,"line_start":65,"line_end":65,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2257,"byte_end":2266,"line_start":72,"line_end":72,"column_start":11,"column_end":20},"name":"InnerUser","qualname":"::InnerUser","value":"InnerUser","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" Types which use another type for initialization.","sig":null,"attributes":[{"value":"/ Types which use another type for initialization.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2117,"byte_end":2169,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2170,"byte_end":2173,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`InnerInit`] or [`InnerIvInit`].","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2174,"byte_end":2246,"line_start":71,"line_end":71,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2298,"byte_end":2303,"line_start":74,"line_end":74,"column_start":10,"column_end":15},"name":"Inner","qualname":"::InnerUser::Inner","value":"type Inner;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Inner type.\n","sig":null,"attributes":[{"value":"/ Inner type.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2273,"byte_end":2288,"line_start":73,"line_end":73,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2340,"byte_end":2345,"line_start":78,"line_end":78,"column_start":11,"column_end":16},"name":"Reset","qualname":"::Reset","value":"Reset","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Resettable types.\n","sig":null,"attributes":[{"value":"/ Resettable types.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2308,"byte_end":2329,"line_start":77,"line_end":77,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2397,"byte_end":2402,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"reset","qualname":"::Reset::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Reset state to its initial value.\n","sig":null,"attributes":[{"value":"/ Reset state to its initial value.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2352,"byte_end":2389,"line_start":79,"line_end":79,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2509,"byte_end":2522,"line_start":84,"line_end":84,"column_start":11,"column_end":24},"name":"AlgorithmName","qualname":"::AlgorithmName","value":"AlgorithmName","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" Trait which stores algorithm name constant, used in `Debug` implementations.\n","sig":null,"attributes":[{"value":"/ Trait which stores algorithm name constant, used in `Debug` implementations.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2418,"byte_end":2498,"line_start":83,"line_end":83,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2571,"byte_end":2585,"line_start":86,"line_end":86,"column_start":8,"column_end":22},"name":"write_alg_name","qualname":"::AlgorithmName::write_alg_name","value":"pub fn write_alg_name(&mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Write algorithm name into `f`.\n","sig":null,"attributes":[{"value":"/ Write algorithm name into `f`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2529,"byte_end":2563,"line_start":85,"line_end":85,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2688,"byte_end":2695,"line_start":90,"line_end":90,"column_start":11,"column_end":18},"name":"KeyInit","qualname":"::KeyInit","value":"KeyInit: KeySizeUser + Sized","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Types which can be initialized from key.\n","sig":null,"attributes":[{"value":"/ Types which can be initialized from key.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2633,"byte_end":2677,"line_start":89,"line_end":89,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2772,"byte_end":2775,"line_start":92,"line_end":92,"column_start":8,"column_end":11},"name":"new","qualname":"::KeyInit::new","value":"pub fn new(&Key<Self>) -> Self","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Create new value from fixed size key.\n","sig":null,"attributes":[{"value":"/ Create new value from fixed size key.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2723,"byte_end":2764,"line_start":91,"line_end":91,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2859,"byte_end":2873,"line_start":95,"line_end":95,"column_start":8,"column_end":22},"name":"new_from_slice","qualname":"::KeyInit::new_from_slice","value":"pub fn new_from_slice(&[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Create new value from variable size key.\n","sig":null,"attributes":[{"value":"/ Create new value from variable size key.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2807,"byte_end":2851,"line_start":94,"line_end":94,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3519,"byte_end":3528,"line_start":115,"line_end":115,"column_start":11,"column_end":20},"name":"KeyIvInit","qualname":"::KeyIvInit","value":"KeyIvInit: KeySizeUser + IvSizeUser + Sized","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Types which can be initialized from key and initialization vector (nonce).\n","sig":null,"attributes":[{"value":"/ Types which can be initialized from key and initialization vector (nonce).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3430,"byte_end":3508,"line_start":114,"line_end":114,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3630,"byte_end":3633,"line_start":117,"line_end":117,"column_start":8,"column_end":11},"name":"new","qualname":"::KeyIvInit::new","value":"pub fn new(&Key<Self>, &Iv<Self>) -> Self","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Create new value from fixed length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new value from fixed length key and nonce.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3569,"byte_end":3622,"line_start":116,"line_end":116,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3758,"byte_end":3773,"line_start":121,"line_end":121,"column_start":8,"column_end":23},"name":"new_from_slices","qualname":"::KeyIvInit::new_from_slices","value":"pub fn new_from_slices(&[u8], &[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Create new value from variable length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new value from variable length key and nonce.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3680,"byte_end":3736,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3741,"byte_end":3750,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5324,"byte_end":5333,"line_start":166,"line_end":166,"column_start":11,"column_end":20},"name":"InnerInit","qualname":"::InnerInit","value":"InnerInit: InnerUser + Sized","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" Types which can be initialized from another type (usually block ciphers).","sig":null,"attributes":[{"value":"/ Types which can be initialized from another type (usually block ciphers).","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5172,"byte_end":5249,"line_start":163,"line_end":163,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5250,"byte_end":5253,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Usually used for initializing types from block ciphers.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5254,"byte_end":5313,"line_start":165,"line_end":165,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5405,"byte_end":5415,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"inner_init","qualname":"::InnerInit::inner_init","value":"pub fn inner_init(Self::Inner) -> Self","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Initialize value from the `inner`.\n","sig":null,"attributes":[{"value":"/ Initialize value from the `inner`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5359,"byte_end":5397,"line_start":167,"line_end":167,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5623,"byte_end":5634,"line_start":175,"line_end":175,"column_start":11,"column_end":22},"name":"InnerIvInit","qualname":"::InnerIvInit","value":"InnerIvInit: InnerUser + IvSizeUser + Sized","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" Types which can be initialized from another type and additional initialization\n vector/nonce.","sig":null,"attributes":[{"value":"/ Types which can be initialized from another type and additional initialization","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5448,"byte_end":5530,"line_start":171,"line_end":171,"column_start":1,"column_end":83}},{"value":"/ vector/nonce.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5531,"byte_end":5548,"line_start":172,"line_end":172,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5549,"byte_end":5552,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Usually used for initializing types from block ciphers.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5553,"byte_end":5612,"line_start":174,"line_end":174,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5731,"byte_end":5744,"line_start":177,"line_end":177,"column_start":8,"column_end":21},"name":"inner_iv_init","qualname":"::InnerIvInit::inner_iv_init","value":"pub fn inner_iv_init(Self::Inner, &Iv<Self>) -> Self","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Initialize value using `inner` and `iv` array.\n","sig":null,"attributes":[{"value":"/ Initialize value using `inner` and `iv` array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5673,"byte_end":5723,"line_start":176,"line_end":176,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5852,"byte_end":5871,"line_start":180,"line_end":180,"column_start":8,"column_end":27},"name":"inner_iv_slice_init","qualname":"::InnerIvInit::inner_iv_slice_init","value":"pub fn inner_iv_slice_init(Self::Inner, &[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Initialize value using `inner` and `iv` slice.\n","sig":null,"attributes":[{"value":"/ Initialize value using `inner` and `iv` slice.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5794,"byte_end":5844,"line_start":179,"line_end":179,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":8204,"byte_end":8217,"line_start":268,"line_end":268,"column_start":12,"column_end":25},"name":"InvalidLength","qualname":"::InvalidLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned when key and/or IV used in the [`KeyInit`],\n [`KeyIvInit`], and [`InnerIvInit`] slice-based methods had\n an invalid length.\n","sig":null,"attributes":[{"value":"/ The error type returned when key and/or IV used in the [`KeyInit`],","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":7990,"byte_end":8061,"line_start":264,"line_end":264,"column_start":1,"column_end":72}},{"value":"/ [`KeyIvInit`], and [`InnerIvInit`] slice-based methods had","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":8062,"byte_end":8124,"line_start":265,"line_end":265,"column_start":1,"column_end":63}},{"value":"/ an invalid length.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":8125,"byte_end":8147,"line_start":266,"line_end":266,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":6477,"byte_end":6478,"line_start":199,"line_end":199,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":6612,"byte_end":6613,"line_start":207,"line_end":207,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":6995,"byte_end":6996,"line_start":223,"line_end":223,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":8242,"byte_end":8255,"line_start":270,"line_end":270,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":8430,"byte_end":8443,"line_start":277,"line_end":277,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2697,"byte_end":2708,"line_start":90,"line_end":90,"column_start":20,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":36},"to":{"krate":0,"index":46}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":2711,"byte_end":2716,"line_start":90,"line_end":90,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":46}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3530,"byte_end":3541,"line_start":115,"line_end":115,"column_start":22,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":36},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3544,"byte_end":3554,"line_start":115,"line_end":115,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":38},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":3557,"byte_end":3562,"line_start":115,"line_end":115,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5335,"byte_end":5344,"line_start":166,"line_end":166,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5347,"byte_end":5352,"line_start":166,"line_end":166,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5636,"byte_end":5645,"line_start":175,"line_end":175,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5648,"byte_end":5658,"line_start":175,"line_end":175,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":38},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":5661,"byte_end":5666,"line_start":175,"line_end":175,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":6477,"byte_end":6478,"line_start":199,"line_end":199,"column_start":25,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":6612,"byte_end":6613,"line_start":207,"line_end":207,"column_start":23,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":61},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":6995,"byte_end":6996,"line_start":223,"line_end":223,"column_start":21,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":46}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":8242,"byte_end":8255,"line_start":270,"line_end":270,"column_start":23,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":73},"to":{"krate":1,"index":9401}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.1/src/lib.rs","byte_start":8430,"byte_end":8443,"line_start":277,"line_end":277,"column_start":28,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":73},"to":{"krate":4,"index":2338}}]}