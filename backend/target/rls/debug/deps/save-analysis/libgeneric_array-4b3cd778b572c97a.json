{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5","program":"/home/fury/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","generic_array","/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"more_lengths\"","--cfg","feature=\"serde\"","-C","metadata=4b3cd778b572c97a","-C","extra-filename=-4b3cd778b572c97a","--out-dir","/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps","-L","dependency=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps","--extern","serde=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libserde-5a3f58decdaf770e.rmeta","--extern","typenum=/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libtypenum-30844e8a3a841e5c.rmeta","--cap-lints","allow","--cfg","relaxed_coherence","--error-format=json","--sysroot","/home/fury/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/fury/Rust/apollo/goblin-army-solana-nft-staking-react/backend/staking_program/target/rls/debug/deps/libgeneric_array-4b3cd778b572c97a.rmeta"},"prelude":{"crate_id":{"name":"generic_array","disambiguator":[1073028785072075367,0]},"crate_root":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src","external_crates":[{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":4,"id":{"name":"serde","disambiguator":[15198278077471077582,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":14,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":15,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":16,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":17,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":18,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":19,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[7313136997057164943,0]}},{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","num":22,"id":{"name":"typenum","disambiguator":[18190153633746893416,0]}}],"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":0,"byte_end":17923,"line_start":1,"line_end":673,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2253,"byte_end":2269,"line_start":101,"line_end":101,"column_start":21,"column_end":37},"alias_span":null,"name":"GenericArrayIter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":0,"byte_end":17923,"line_start":1,"line_end":673,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":131},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":269},{"krate":0,"index":318},{"krate":0,"index":402},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":529},{"krate":0,"index":535},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":548},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":587},{"krate":0,"index":593},{"krate":0,"index":597},{"krate":0,"index":602},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":618},{"krate":0,"index":625},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":651},{"krate":0,"index":656},{"krate":0,"index":672},{"krate":0,"index":679},{"krate":0,"index":684},{"krate":0,"index":689},{"krate":0,"index":693},{"krate":0,"index":699}],"decl_id":null,"docs":" This crate implements a structure that can be used as a generic array type.\n Core Rust array types `[T; N]` can't be used generically with\n respect to `N`, so for example this:","sig":null,"attributes":[{"value":"/ This crate implements a structure that can be used as a generic array type.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ Core Rust array types `[T; N]` can't be used generically with","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":80,"byte_end":145,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ respect to `N`, so for example this:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":146,"byte_end":186,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":187,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```rust{compile_fail}","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":191,"byte_end":216,"line_start":5,"line_end":5,"column_start":1,"column_end":26}},{"value":"/ struct Foo<T, N> {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":217,"byte_end":239,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/     data: [T; N]","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":240,"byte_end":260,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":261,"byte_end":266,"line_start":8,"line_end":8,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":267,"byte_end":274,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":275,"byte_end":278,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ won't work.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":279,"byte_end":294,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":295,"byte_end":298,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ **generic-array** exports a `GenericArray<T,N>` type, which lets","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":299,"byte_end":367,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ the above be implemented as:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":368,"byte_end":400,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":401,"byte_end":404,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":405,"byte_end":416,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ use generic_array::{ArrayLength, GenericArray};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":417,"byte_end":468,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":469,"byte_end":472,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ struct Foo<T, N: ArrayLength<T>> {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":473,"byte_end":511,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/     data: GenericArray<T,N>","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":512,"byte_end":543,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":544,"byte_end":549,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":550,"byte_end":557,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":558,"byte_end":561,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The `ArrayLength<T>` trait is implemented by default for","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":562,"byte_end":622,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/ [unsigned integer types](../typenum/uint/index.html) from","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":623,"byte_end":684,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/ [typenum](../typenum/index.html):","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":685,"byte_end":722,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":723,"byte_end":726,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":727,"byte_end":738,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # use generic_array::{ArrayLength, GenericArray};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":739,"byte_end":792,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ use generic_array::typenum::U5;","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":793,"byte_end":828,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":829,"byte_end":832,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ struct Foo<N: ArrayLength<i32>> {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":833,"byte_end":870,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/     data: GenericArray<i32, N>","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":871,"byte_end":905,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":906,"byte_end":911,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":912,"byte_end":915,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":916,"byte_end":933,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ let foo = Foo::<U5>{data: GenericArray::default()};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":934,"byte_end":989,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":990,"byte_end":997,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":998,"byte_end":1005,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1006,"byte_end":1009,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ For example, `GenericArray<T, U5>` would work almost like `[T; 5]`:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1010,"byte_end":1081,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1082,"byte_end":1085,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1086,"byte_end":1097,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/ # use generic_array::{ArrayLength, GenericArray};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1098,"byte_end":1151,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ use generic_array::typenum::U5;","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1152,"byte_end":1187,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ struct Foo<T, N: ArrayLength<T>> {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1192,"byte_end":1230,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/     data: GenericArray<T, N>","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1231,"byte_end":1263,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1264,"byte_end":1269,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1270,"byte_end":1273,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1274,"byte_end":1291,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/ let foo = Foo::<i32, U5>{data: GenericArray::default()};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1292,"byte_end":1352,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1353,"byte_end":1360,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1361,"byte_end":1368,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1369,"byte_end":1372,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ For ease of use, an `arr!` macro is provided - example below:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1373,"byte_end":1438,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1439,"byte_end":1442,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1443,"byte_end":1450,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1451,"byte_end":1469,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ # extern crate generic_array;","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1470,"byte_end":1503,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/ # extern crate typenum;","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1504,"byte_end":1531,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1532,"byte_end":1549,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/ let array = arr![u32; 1, 2, 3];","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1550,"byte_end":1585,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(array[2], 3);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1586,"byte_end":1614,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1615,"byte_end":1622,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1623,"byte_end":1630,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1632,"byte_end":1654,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"deny(meta_variable_misuse)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1655,"byte_end":1685,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"no_std","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":1686,"byte_end":1696,"line_start":70,"line_end":70,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arr","qualname":"::arr","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"decl_id":null,"docs":" Implementation for `arr!` macro.\n","sig":null,"attributes":[{"value":"/ Implementation for `arr!` macro.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":31828,"byte_end":31864,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":253},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":31972,"byte_end":31981,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AddLength","qualname":"::arr::AddLength","value":"AddLength<T, N: ArrayLength<T>>: ArrayLength<T>","parent":null,"children":[{"krate":0,"index":256}],"decl_id":null,"docs":" Helper trait for `arr!` macro\n","sig":null,"attributes":[{"value":"/ Helper trait for `arr!` macro","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":31928,"byte_end":31961,"line_start":7,"line_end":7,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":256},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":32056,"byte_end":32062,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Output","qualname":"::arr::AddLength::Output","value":"type Output: ArrayLength<T>;","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" Resulting length\n","sig":null,"attributes":[{"value":"/ Resulting length","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":32026,"byte_end":32046,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":262},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":32322,"byte_end":32325,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Inc","qualname":"::arr::Inc","value":"<U as AddLength<T, U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Helper type for `arr!` macro\n","sig":null,"attributes":[{"value":"/ Helper type for `arr!` macro","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":32280,"byte_end":32312,"line_start":22,"line_end":22,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":269},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"functional","qualname":"::functional","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":281},{"krate":0,"index":287},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":310},{"krate":0,"index":314}],"decl_id":null,"docs":" Functional programming with generic sequences","sig":null,"attributes":[{"value":"/ Functional programming with generic sequences","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":35594,"byte_end":35643,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":35644,"byte_end":35647,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Please see `tests/generics.rs` for examples of how to best use these in your generic functions.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":35648,"byte_end":35747,"line_start":3,"line_end":3,"column_start":1,"column_end":100}}]},{"kind":"Trait","id":{"krate":0,"index":277},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":35961,"byte_end":35982,"line_start":12,"line_end":12,"column_start":18,"column_end":39},"name":"MappedGenericSequence","qualname":"::functional::MappedGenericSequence","value":"MappedGenericSequence<T, U>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":280}],"decl_id":null,"docs":" Defines the relationship between one generic sequence and another,\n for operations such as `map` and `zip`.\n","sig":null,"attributes":[{"value":"/ Defines the relationship between one generic sequence and another,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":35829,"byte_end":35899,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ for operations such as `map` and `zip`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":35900,"byte_end":35943,"line_start":11,"line_end":11,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":280},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":36089,"byte_end":36095,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Mapped","qualname":"::functional::MappedGenericSequence::Mapped","value":"type Mapped: GenericSequence<U, Length = Self::Length>;","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Mapped sequence type\n","sig":null,"attributes":[{"value":"/ Mapped sequence type","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":36055,"byte_end":36079,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":293},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":36864,"byte_end":36878,"line_start":39,"line_end":39,"column_start":10,"column_end":24},"name":"MappedSequence","qualname":"::functional::MappedSequence","value":"<<S as MappedGenericSequence<T, U>>::Mapped as GenericSequence<U>>::Sequence","parent":null,"children":[],"decl_id":null,"docs":" Accessor type for a mapped generic sequence\n","sig":null,"attributes":[{"value":"/ Accessor type for a mapped generic sequence","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":36807,"byte_end":36854,"line_start":38,"line_end":38,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":297},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37055,"byte_end":37073,"line_start":43,"line_end":43,"column_start":18,"column_end":36},"name":"FunctionalSequence","qualname":"::functional::FunctionalSequence","value":"FunctionalSequence<T>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":307}],"decl_id":null,"docs":" Defines functional programming methods for generic sequences\n","sig":null,"attributes":[{"value":"/ Defines functional programming methods for generic sequences","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":36973,"byte_end":37037,"line_start":42,"line_end":42,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37364,"byte_end":37367,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"map","qualname":"::functional::FunctionalSequence::map","value":"pub fn map<U, F>(Self, F) -> MappedSequence<Self, T, U> where\nSelf: MappedGenericSequence<T, U>, Self::Length: ArrayLength<U>,\nF: FnMut(Self::Item) -> U","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Maps a `GenericSequence` to another `GenericSequence`.","sig":null,"attributes":[{"value":"/ Maps a `GenericSequence` to another `GenericSequence`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37103,"byte_end":37161,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37166,"byte_end":37169,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If the mapping function panics, any already initialized elements in the new sequence","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37174,"byte_end":37262,"line_start":46,"line_end":46,"column_start":5,"column_end":93}},{"value":"/ will be dropped, AND any unused elements in the source sequence will also be dropped.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37267,"byte_end":37356,"line_start":47,"line_end":47,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":38006,"byte_end":38009,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"zip","qualname":"::functional::FunctionalSequence::zip","value":"pub fn zip<B, Rhs, U, F>(Self, Rhs, F) -> MappedSequence<Self, T, U> where\nSelf: MappedGenericSequence<T, U>, Rhs: MappedGenericSequence<B, U, Mapped =\nMappedSequence<Self, T, U>>, Self::Length: ArrayLength<B> + ArrayLength<U>,\nRhs: GenericSequence<B, Length = Self::Length>,\nF: FnMut(Self::Item, Rhs::Item) -> U","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Combines two `GenericSequence` instances and iterates through both of them,\n initializing a new `GenericSequence` with the result of the zipped mapping function.","sig":null,"attributes":[{"value":"/ Combines two `GenericSequence` instances and iterates through both of them,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37616,"byte_end":37695,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/ initializing a new `GenericSequence` with the result of the zipped mapping function.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37700,"byte_end":37788,"line_start":58,"line_end":58,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37793,"byte_end":37796,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If the mapping function panics, any already initialized elements in the new sequence","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37801,"byte_end":37889,"line_start":60,"line_end":60,"column_start":5,"column_end":93}},{"value":"/ will be dropped, AND any unused elements in the source sequences will also be dropped.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37894,"byte_end":37984,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37989,"byte_end":37998,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":38569,"byte_end":38573,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"fold","qualname":"::functional::FunctionalSequence::fold","value":"pub fn fold<U, F>(Self, U, F) -> U where F: FnMut(U, Self::Item) -> U","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Folds (or reduces) a sequence of data into a single value.","sig":null,"attributes":[{"value":"/ Folds (or reduces) a sequence of data into a single value.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":38417,"byte_end":38479,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":38484,"byte_end":38487,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ If the fold function panics, any unused elements will be dropped.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":38492,"byte_end":38561,"line_start":76,"line_end":76,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":318},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":351},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":374},{"krate":0,"index":387},{"krate":0,"index":395},{"krate":0,"index":399}],"decl_id":null,"docs":" `GenericArray` iterator implementation.\n","sig":null,"attributes":[{"value":"/ `GenericArray` iterator implementation.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39043,"byte_end":39086,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39283,"byte_end":39299,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"GenericArrayIter","qualname":"::iter::GenericArrayIter","value":"GenericArrayIter {  }","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"decl_id":null,"docs":" An iterator that moves out of a `GenericArray`\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `GenericArray`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39221,"byte_end":39271,"line_start":8,"line_end":8,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39957,"byte_end":39965,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArrayIter<T, N>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39872,"byte_end":39931,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39936,"byte_end":39945,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40147,"byte_end":40159,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArrayIter<T, N>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a mutable slice","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40054,"byte_end":40121,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40126,"byte_end":40135,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":402},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":445},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":469},{"krate":0,"index":475},{"krate":0,"index":481},{"krate":0,"index":488},{"krate":0,"index":496},{"krate":0,"index":504},{"krate":0,"index":510}],"decl_id":null,"docs":" Useful traits for manipulating sequences of data stored in `GenericArray`s\n","sig":null,"attributes":[{"value":"/ Useful traits for manipulating sequences of data stored in `GenericArray`s","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45185,"byte_end":45263,"line_start":1,"line_end":1,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":418},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45553,"byte_end":45568,"line_start":12,"line_end":12,"column_start":18,"column_end":33},"name":"GenericSequence","qualname":"::sequence::GenericSequence","value":"GenericSequence<T>: Sized + IntoIterator","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":429}],"decl_id":null,"docs":" Defines some sequence with an associated length and iteration capabilities.","sig":null,"attributes":[{"value":"/ Defines some sequence with an associated length and iteration capabilities.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45384,"byte_end":45463,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45464,"byte_end":45467,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is useful for passing N-length generic arrays as generics.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45468,"byte_end":45535,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":420},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45646,"byte_end":45652,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Length","qualname":"::sequence::GenericSequence::Length","value":"type Length: ArrayLength<T>;","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" `GenericArray` associated length\n","sig":null,"attributes":[{"value":"/ `GenericArray` associated length","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45600,"byte_end":45636,"line_start":13,"line_end":13,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":421},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45782,"byte_end":45790,"line_start":17,"line_end":17,"column_start":10,"column_end":18},"name":"Sequence","qualname":"::sequence::GenericSequence::Sequence","value":"type Sequence: GenericSequence<T, Length = Self::Length> + FromIterator<T>;","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Concrete sequence type used in conjuction with reference implementations of `GenericSequence`\n","sig":null,"attributes":[{"value":"/ Concrete sequence type used in conjuction with reference implementations of `GenericSequence`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45675,"byte_end":45772,"line_start":16,"line_end":16,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":46071,"byte_end":46079,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"generate","qualname":"::sequence::GenericSequence::generate","value":"pub fn generate<F>(F) -> Self::Sequence where F: FnMut(usize) -> T","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Initializes a new sequence instance using the given function.","sig":null,"attributes":[{"value":"/ Initializes a new sequence instance using the given function.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45858,"byte_end":45923,"line_start":19,"line_end":19,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45928,"byte_end":45931,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ If the generator function panics while initializing the sequence,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45936,"byte_end":46005,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/ any already initialized elements will be dropped.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":46010,"byte_end":46063,"line_start":22,"line_end":22,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":46174,"byte_end":46186,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"inverted_zip","qualname":"::sequence::GenericSequence::inverted_zip","value":"pub fn inverted_zip<B, U, F>(Self, GenericArray<B, Self::Length>, F)\n-> MappedSequence<GenericArray<B, Self::Length>, B, U> where\nGenericArray<B, Self::Length>: GenericSequence<B, Length = Self::Length> +\nMappedGenericSequence<B, U>, Self: MappedGenericSequence<T, U>,\nSelf::Length: ArrayLength<B> + ArrayLength<U>, F: FnMut(B, Self::Item) -> U","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":47100,"byte_end":47113,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"inverted_zip2","qualname":"::sequence::GenericSequence::inverted_zip2","value":"pub fn inverted_zip2<B, Lhs, U, F>(Self, Lhs, F) -> MappedSequence<Lhs, B, U>\nwhere Lhs: GenericSequence<B, Length = Self::Length> +\nMappedGenericSequence<B, U>, Self: MappedGenericSequence<T, U>,\nSelf::Length: ArrayLength<B> + ArrayLength<U>, F: FnMut(Lhs::Item, Self::Item)\n-> U","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":435},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":47768,"byte_end":47780,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"SequenceItem","qualname":"::sequence::SequenceItem","value":"<T as IntoIterator>::Item","parent":null,"children":[],"decl_id":null,"docs":" Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","sig":null,"attributes":[{"value":"/ Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":47531,"byte_end":47613,"line_start":69,"line_end":69,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":47614,"byte_end":47617,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ For deeply nested generic mapped sequence types, like shown in `tests/generics.rs`,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":47618,"byte_end":47705,"line_start":71,"line_end":71,"column_start":1,"column_end":88}},{"value":"/ this can be useful for keeping things organized.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":47706,"byte_end":47758,"line_start":72,"line_end":72,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":453},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48672,"byte_end":48680,"line_start":111,"line_end":111,"column_start":18,"column_end":26},"name":"Lengthen","qualname":"::sequence::Lengthen","value":"Lengthen<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" Defines any `GenericSequence` which can be lengthened or extended by appending\n or prepending an element to it.","sig":null,"attributes":[{"value":"/ Defines any `GenericSequence` which can be lengthened or extended by appending","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48434,"byte_end":48516,"line_start":107,"line_end":107,"column_start":1,"column_end":83}},{"value":"/ or prepending an element to it.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48517,"byte_end":48552,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48553,"byte_end":48556,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Any lengthened sequence can be shortened back to the original using `pop_front` or `pop_back`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48557,"byte_end":48654,"line_start":110,"line_end":110,"column_start":1,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":455},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48787,"byte_end":48793,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"Longer","qualname":"::sequence::Lengthen::Longer","value":"type Longer: Shorten<T, Shorter = Self>;","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one more element than `Self`\n","sig":null,"attributes":[{"value":"/ `GenericSequence` that has one more element than `Self`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48718,"byte_end":48777,"line_start":112,"line_end":112,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49187,"byte_end":49193,"line_start":129,"line_end":129,"column_start":8,"column_end":14},"name":"append","qualname":"::sequence::Lengthen::append","value":"pub fn append(Self, T) -> Self::Longer","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" Returns a new array with the given element appended to the end of it.","sig":null,"attributes":[{"value":"/ Returns a new array with the given element appended to the end of it.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48828,"byte_end":48901,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48906,"byte_end":48909,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48914,"byte_end":48926,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48931,"byte_end":48934,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48939,"byte_end":48950,"line_start":119,"line_end":119,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Lengthen};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48955,"byte_end":49006,"line_start":120,"line_end":120,"column_start":5,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49011,"byte_end":49028,"line_start":121,"line_end":121,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3];","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49033,"byte_end":49064,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49069,"byte_end":49072,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let b = a.append(4);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49077,"byte_end":49101,"line_start":124,"line_end":124,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49106,"byte_end":49109,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b, arr![i32; 1, 2, 3, 4]);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49114,"byte_end":49155,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49160,"byte_end":49167,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49172,"byte_end":49179,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49594,"byte_end":49601,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"prepend","qualname":"::sequence::Lengthen::prepend","value":"pub fn prepend(Self, T) -> Self::Longer","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" Returns a new array with the given element prepended to the front of it.","sig":null,"attributes":[{"value":"/ Returns a new array with the given element prepended to the front of it.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49231,"byte_end":49307,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49312,"byte_end":49315,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49320,"byte_end":49332,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49337,"byte_end":49340,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49345,"byte_end":49356,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Lengthen};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49361,"byte_end":49412,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49417,"byte_end":49434,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3];","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49439,"byte_end":49470,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49475,"byte_end":49478,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let b = a.prepend(4);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49483,"byte_end":49508,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49513,"byte_end":49516,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b, arr![i32; 4, 1, 2, 3]);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49521,"byte_end":49562,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49567,"byte_end":49574,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49579,"byte_end":49586,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":458},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49869,"byte_end":49876,"line_start":152,"line_end":152,"column_start":18,"column_end":25},"name":"Shorten","qualname":"::sequence::Shorten","value":"Shorten<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"decl_id":null,"docs":" Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","sig":null,"attributes":[{"value":"/ Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49638,"byte_end":49739,"line_start":148,"line_end":148,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49740,"byte_end":49743,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Additionally, any shortened sequence can be lengthened by","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49744,"byte_end":49805,"line_start":150,"line_end":150,"column_start":1,"column_end":62}},{"value":"/ appending or prepending an element to it.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49806,"byte_end":49851,"line_start":151,"line_end":151,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":460},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49983,"byte_end":49990,"line_start":154,"line_end":154,"column_start":10,"column_end":17},"name":"Shorter","qualname":"::sequence::Shorten::Shorter","value":"type Shorter: Lengthen<T, Longer = Self>;","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one less element than `Self`\n","sig":null,"attributes":[{"value":"/ `GenericSequence` that has one less element than `Self`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49914,"byte_end":49973,"line_start":153,"line_end":153,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50425,"byte_end":50433,"line_start":171,"line_end":171,"column_start":8,"column_end":16},"name":"pop_back","qualname":"::sequence::Shorten::pop_back","value":"pub fn pop_back(Self) -> (Self::Shorter, T)","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Returns a new array without the last element, and the last element.","sig":null,"attributes":[{"value":"/ Returns a new array without the last element, and the last element.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50025,"byte_end":50096,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50101,"byte_end":50104,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50109,"byte_end":50121,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50126,"byte_end":50129,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50134,"byte_end":50145,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Shorten};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50150,"byte_end":50200,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ # fn main() {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50205,"byte_end":50222,"line_start":162,"line_end":162,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3, 4];","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50227,"byte_end":50261,"line_start":163,"line_end":163,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50266,"byte_end":50269,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let (init, last) = a.pop_back();","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50274,"byte_end":50310,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50315,"byte_end":50318,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(init, arr![i32; 1, 2, 3]);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50323,"byte_end":50364,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(last, 4);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50369,"byte_end":50393,"line_start":168,"line_end":168,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50398,"byte_end":50405,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50410,"byte_end":50417,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50863,"byte_end":50872,"line_start":187,"line_end":187,"column_start":8,"column_end":17},"name":"pop_front","qualname":"::sequence::Shorten::pop_front","value":"pub fn pop_front(Self) -> (T, Self::Shorter)","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Returns a new array without the first element, and the first element.\n Example:","sig":null,"attributes":[{"value":"/ Returns a new array without the first element, and the first element.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50468,"byte_end":50541,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ Example:","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50546,"byte_end":50558,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50563,"byte_end":50566,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50571,"byte_end":50582,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Shorten};","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50587,"byte_end":50637,"line_start":177,"line_end":177,"column_start":5,"column_end":55}},{"value":"/ # fn main() {","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50642,"byte_end":50659,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3, 4];","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50664,"byte_end":50698,"line_start":179,"line_end":179,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50703,"byte_end":50706,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let (head, tail) = a.pop_front();","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50711,"byte_end":50748,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50753,"byte_end":50756,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(head, 1);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50761,"byte_end":50785,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(tail, arr![i32; 2, 3, 4]);","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50790,"byte_end":50831,"line_start":184,"line_end":184,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50836,"byte_end":50843,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50848,"byte_end":50855,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53107,"byte_end":53112,"line_start":266,"line_end":266,"column_start":18,"column_end":23},"name":"Split","qualname":"::sequence::Split","value":"Split<T, K>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"decl_id":null,"docs":" Defines a `GenericSequence` that can be split into two parts at a given pivot index.\n","sig":null,"attributes":[{"value":"/ Defines a `GenericSequence` that can be split into two parts at a given pivot index.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53001,"byte_end":53089,"line_start":265,"line_end":265,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":478},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53227,"byte_end":53232,"line_start":271,"line_end":271,"column_start":10,"column_end":15},"name":"First","qualname":"::sequence::Split::First","value":"type First: GenericSequence<T>;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" First part of the resulting split array\n","sig":null,"attributes":[{"value":"/ First part of the resulting split array","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53174,"byte_end":53217,"line_start":270,"line_end":270,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":479},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53312,"byte_end":53318,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"name":"Second","qualname":"::sequence::Split::Second","value":"type Second: GenericSequence<T>;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Second part of the resulting split array\n","sig":null,"attributes":[{"value":"/ Second part of the resulting split array","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53258,"byte_end":53302,"line_start":272,"line_end":272,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53435,"byte_end":53440,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"split","qualname":"::sequence::Split::split","value":"pub fn split(Self) -> (Self::First, Self::Second)","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Splits an array at the given index, returning the separate parts of the array.\n","sig":null,"attributes":[{"value":"/ Splits an array at the given index, returning the separate parts of the array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53345,"byte_end":53427,"line_start":275,"line_end":275,"column_start":5,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":504},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55307,"byte_end":55313,"line_start":343,"line_end":343,"column_start":18,"column_end":24},"name":"Concat","qualname":"::sequence::Concat","value":"Concat<T, M>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"decl_id":null,"docs":" Defines `GenericSequence`s which can be joined together, forming a larger array.\n","sig":null,"attributes":[{"value":"/ Defines `GenericSequence`s which can be joined together, forming a larger array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55205,"byte_end":55289,"line_start":342,"line_end":342,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":507},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55428,"byte_end":55432,"line_start":348,"line_end":348,"column_start":10,"column_end":14},"name":"Rest","qualname":"::sequence::Concat::Rest","value":"type Rest: GenericSequence<T, Length = M>;","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Sequence to be concatenated with `self`\n","sig":null,"attributes":[{"value":"/ Sequence to be concatenated with `self`","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55375,"byte_end":55418,"line_start":347,"line_end":347,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":508},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55532,"byte_end":55538,"line_start":351,"line_end":351,"column_start":10,"column_end":16},"name":"Output","qualname":"::sequence::Concat::Output","value":"type Output: GenericSequence<T>;","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Resulting sequence formed by the concatenation.\n","sig":null,"attributes":[{"value":"/ Resulting sequence formed by the concatenation.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55471,"byte_end":55522,"line_start":350,"line_end":350,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55613,"byte_end":55619,"line_start":354,"line_end":354,"column_start":8,"column_end":14},"name":"concat","qualname":"::sequence::Concat::concat","value":"pub fn concat(Self, Self::Rest) -> Self::Output","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Concatenate, or join, two sequences.\n","sig":null,"attributes":[{"value":"/ Concatenate, or join, two sequences.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55565,"byte_end":55605,"line_start":353,"line_end":353,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":522},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2397,"byte_end":2408,"line_start":105,"line_end":105,"column_start":18,"column_end":29},"name":"ArrayLength","qualname":"::ArrayLength","value":"ArrayLength<T>: Unsigned","parent":null,"children":[{"krate":0,"index":524}],"decl_id":null,"docs":" Trait making `GenericArray` work, marking types to be used as length of an array\n","sig":null,"attributes":[{"value":"/ Trait making `GenericArray` work, marking types to be used as length of an array","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2295,"byte_end":2379,"line_start":104,"line_end":104,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":524},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2500,"byte_end":2509,"line_start":107,"line_end":107,"column_start":10,"column_end":19},"name":"ArrayType","qualname":"::ArrayLength::ArrayType","value":"type ArrayType;","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Associated type representing the array type for the number\n","sig":null,"attributes":[{"value":"/ Associated type representing the array type for the number","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2428,"byte_end":2490,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":529},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2728,"byte_end":2748,"line_start":119,"line_end":119,"column_start":12,"column_end":32},"name":"GenericArrayImplEven","qualname":"::GenericArrayImplEven","value":"GenericArrayImplEven {  }","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"/ Internal type used to generate a struct of appropriate size","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2607,"byte_end":2670,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"allow(dead_code)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2671,"byte_end":2690,"line_start":116,"line_end":116,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2691,"byte_end":2701,"line_start":117,"line_end":117,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3291,"byte_end":3310,"line_start":141,"line_end":141,"column_start":12,"column_end":31},"name":"GenericArrayImplOdd","qualname":"::GenericArrayImplOdd","value":"GenericArrayImplOdd {  }","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"/ Internal type used to generate a struct of appropriate size","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3170,"byte_end":3233,"line_start":137,"line_end":137,"column_start":1,"column_end":64}},{"value":"allow(dead_code)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3234,"byte_end":3253,"line_start":138,"line_end":138,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3254,"byte_end":3264,"line_start":139,"line_end":139,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":563},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4145,"byte_end":4157,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"GenericArray","qualname":"::GenericArray","value":"GenericArray {  }","parent":null,"children":[{"krate":0,"index":566}],"decl_id":null,"docs":" Struct representing a generic array - `GenericArray<T, N>` works like [T; N]\n","sig":null,"attributes":[{"value":"/ Struct representing a generic array - `GenericArray<T, N>` works like [T; N]","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4012,"byte_end":4092,"line_start":169,"line_end":169,"column_start":1,"column_end":81}},{"value":"allow(dead_code)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4093,"byte_end":4112,"line_start":170,"line_end":170,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4113,"byte_end":4133,"line_start":171,"line_end":171,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":582},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5093,"byte_end":5105,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"ArrayBuilder","qualname":"::ArrayBuilder","value":"ArrayBuilder {  }","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"decl_id":null,"docs":" Creates an array one element at a time using a mutable iterator\n you can write to with `ptr::write`.","sig":null,"attributes":[{"value":"/ Creates an array one element at a time using a mutable iterator","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4823,"byte_end":4890,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/ you can write to with `ptr::write`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4891,"byte_end":4930,"line_start":202,"line_end":202,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4931,"byte_end":4934,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Incremenent the position while iterating to mark off created elements,","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4935,"byte_end":5009,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ which will be dropped if `into_inner` is not called.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5010,"byte_end":5066,"line_start":205,"line_end":205,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5297,"byte_end":5300,"line_start":215,"line_end":215,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayBuilder<T, N>>::new","value":"pub unsafe fn new() -> ArrayBuilder<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5269,"byte_end":5278,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5707,"byte_end":5720,"line_start":228,"line_end":228,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayBuilder<T, N>>::iter_position","value":"pub unsafe fn iter_position(&mut Self) -> (slice::IterMut<, T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable iterator for writing to the array using `ptr::write`.","sig":null,"attributes":[{"value":"/ Creates a mutable iterator for writing to the array using `ptr::write`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5438,"byte_end":5513,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5518,"byte_end":5521,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Increment the position value given as a mutable reference as you iterate","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5526,"byte_end":5602,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ to mark how many elements have been created.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5607,"byte_end":5655,"line_start":225,"line_end":225,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5679,"byte_end":5688,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6001,"byte_end":6011,"line_start":236,"line_end":236,"column_start":19,"column_end":29},"name":"into_inner","qualname":"<ArrayBuilder<T, N>>::into_inner","value":"pub unsafe fn into_inner(Self) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" When done writing (assuming all elements have been written to),\n get the inner array.\n","sig":null,"attributes":[{"value":"/ When done writing (assuming all elements have been written to),","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5853,"byte_end":5920,"line_start":232,"line_end":232,"column_start":5,"column_end":72}},{"value":"/ get the inner array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5925,"byte_end":5949,"line_start":233,"line_end":233,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5973,"byte_end":5982,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6645,"byte_end":6658,"line_start":262,"line_end":262,"column_start":12,"column_end":25},"name":"ArrayConsumer","qualname":"::ArrayConsumer","value":"ArrayConsumer {  }","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Consumes an array.","sig":null,"attributes":[{"value":"/ Consumes an array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6474,"byte_end":6496,"line_start":257,"line_end":257,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6497,"byte_end":6500,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Increment the position while iterating and any leftover elements","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6501,"byte_end":6569,"line_start":259,"line_end":259,"column_start":1,"column_end":69}},{"value":"/ will be dropped if position does not go to N","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6570,"byte_end":6618,"line_start":260,"line_end":260,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6852,"byte_end":6855,"line_start":270,"line_end":270,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayConsumer<T, N>>::new","value":"pub unsafe fn new(GenericArray<T, N>) -> ArrayConsumer<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6824,"byte_end":6833,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7273,"byte_end":7286,"line_start":283,"line_end":283,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayConsumer<T, N>>::iter_position","value":"pub unsafe fn iter_position(&mut Self) -> (slice::Iter<, T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator and mutable reference to the internal position\n to keep track of consumed elements.","sig":null,"attributes":[{"value":"/ Creates an iterator and mutable reference to the internal position","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7023,"byte_end":7093,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ to keep track of consumed elements.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7098,"byte_end":7137,"line_start":278,"line_end":278,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7142,"byte_end":7145,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Increment the position as you iterate to mark off consumed elements","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7150,"byte_end":7221,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7245,"byte_end":7254,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13723,"byte_end":13731,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArray<T, N>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13648,"byte_end":13697,"line_start":524,"line_end":524,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13702,"byte_end":13711,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13864,"byte_end":13876,"line_start":532,"line_end":532,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArray<T, N>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire array.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13781,"byte_end":13838,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13843,"byte_end":13852,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14111,"byte_end":14121,"line_start":540,"line_end":540,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<GenericArray<T, N>>::from_slice","value":"pub fn from_slice(&[T]) -> &GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts slice to a generic array reference with inferred length;","sig":null,"attributes":[{"value":"/ Converts slice to a generic array reference with inferred length;","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13938,"byte_end":14007,"line_start":536,"line_end":536,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14012,"byte_end":14015,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14020,"byte_end":14085,"line_start":538,"line_end":538,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14090,"byte_end":14099,"line_start":539,"line_end":539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14359,"byte_end":14373,"line_start":548,"line_end":548,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<GenericArray<T, N>>::from_mut_slice","value":"pub fn from_mut_slice(&mut [T]) -> &mut GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts mutable slice to a mutable generic array reference","sig":null,"attributes":[{"value":"/ Converts mutable slice to a mutable generic array reference","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14192,"byte_end":14255,"line_start":544,"line_end":544,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14260,"byte_end":14263,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14268,"byte_end":14333,"line_start":546,"line_end":546,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":14338,"byte_end":14347,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15527,"byte_end":15543,"line_start":585,"line_end":585,"column_start":12,"column_end":28},"name":"clone_from_slice","qualname":"<GenericArray<T, N>>::clone_from_slice","value":"pub fn clone_from_slice(&[T]) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `GenericArray` from a slice by cloning its content","sig":null,"attributes":[{"value":"/ Construct a `GenericArray` from a slice by cloning its content","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15358,"byte_end":15424,"line_start":581,"line_end":581,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15429,"byte_end":15432,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15437,"byte_end":15501,"line_start":583,"line_end":583,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15506,"byte_end":15515,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15969,"byte_end":15984,"line_start":598,"line_end":598,"column_start":12,"column_end":27},"name":"from_exact_iter","qualname":"<GenericArray<T, N>>::from_exact_iter","value":"pub fn from_exact_iter<I>(I) -> Option<Self> where I: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `GenericArray` instance from an iterator with a specific size.","sig":null,"attributes":[{"value":"/ Creates a new `GenericArray` instance from an iterator with a specific size.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15772,"byte_end":15852,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15857,"byte_end":15860,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the size is not equal to the number of elements in the `GenericArray`.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15865,"byte_end":15957,"line_start":597,"line_end":597,"column_start":5,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":699},"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":16999,"byte_end":17008,"line_start":636,"line_end":636,"column_start":15,"column_end":24},"name":"transmute","qualname":"::transmute","value":"pub unsafe fn transmute<A, B>(A) -> B","parent":null,"children":[],"decl_id":null,"docs":" A reimplementation of the `transmute` function, avoiding problems\n when the compiler can't prove equal sizes.\n","sig":null,"attributes":[{"value":"/ A reimplementation of the `transmute` function, avoiding problems","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":16843,"byte_end":16912,"line_start":632,"line_end":632,"column_start":1,"column_end":70}},{"value":"/ when the compiler can't prove equal sizes.","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":16913,"byte_end":16959,"line_start":633,"line_end":633,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":16960,"byte_end":16969,"line_start":634,"line_end":634,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/hex.rs","byte_start":19308,"byte_end":19320,"line_start":27,"line_end":27,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/hex.rs","byte_start":20803,"byte_end":20815,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":22611,"byte_end":22623,"line_start":11,"line_end":11,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":22788,"byte_end":22800,"line_start":21,"line_end":21,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":22948,"byte_end":22960,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23061,"byte_end":23073,"line_start":37,"line_end":37,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23208,"byte_end":23220,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23293,"byte_end":23305,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23519,"byte_end":23531,"line_start":56,"line_end":56,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23718,"byte_end":23730,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23891,"byte_end":23903,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24051,"byte_end":24063,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24223,"byte_end":24235,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24379,"byte_end":24391,"line_start":104,"line_end":104,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24547,"byte_end":24559,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impl_serde.rs","byte_start":29268,"byte_end":29280,"line_start":9,"line_end":9,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impl_serde.rs","byte_start":29731,"byte_end":29740,"line_start":33,"line_end":33,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impl_serde.rs","byte_start":30390,"byte_end":30402,"line_start":58,"line_end":58,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":32120,"byte_end":32122,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39814,"byte_end":39830,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40290,"byte_end":40302,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40672,"byte_end":40688,"line_start":64,"line_end":64,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40915,"byte_end":40931,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":41324,"byte_end":41340,"line_start":93,"line_end":93,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":41983,"byte_end":41999,"line_start":118,"line_end":118,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":43701,"byte_end":43717,"line_start":198,"line_end":198,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":44665,"byte_end":44681,"line_start":241,"line_end":241,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":44823,"byte_end":44839,"line_start":250,"line_end":250,"column_start":30,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50955,"byte_end":50967,"line_start":190,"line_end":190,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":52212,"byte_end":52224,"line_start":232,"line_end":232,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53519,"byte_end":53531,"line_start":279,"line_end":279,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55702,"byte_end":55714,"line_start":357,"line_end":357,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2548,"byte_end":2553,"line_start":110,"line_end":110,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2856,"byte_end":2876,"line_start":125,"line_end":125,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3139,"byte_end":3159,"line_start":135,"line_end":135,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3402,"byte_end":3421,"line_start":147,"line_end":147,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3685,"byte_end":3704,"line_start":157,"line_end":157,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3768,"byte_end":3772,"line_start":159,"line_end":159,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3917,"byte_end":3921,"line_start":164,"line_end":164,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4258,"byte_end":4270,"line_start":176,"line_end":176,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4329,"byte_end":4341,"line_start":177,"line_end":177,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4373,"byte_end":4385,"line_start":179,"line_end":179,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4616,"byte_end":4628,"line_start":191,"line_end":191,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5225,"byte_end":5237,"line_start":212,"line_end":212,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6188,"byte_end":6200,"line_start":245,"line_end":245,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6779,"byte_end":6792,"line_start":267,"line_end":267,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7425,"byte_end":7438,"line_start":288,"line_end":288,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":8275,"byte_end":8287,"line_start":324,"line_end":324,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":9282,"byte_end":9294,"line_start":365,"line_end":365,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":11914,"byte_end":11926,"line_start":454,"line_end":454,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":12122,"byte_end":12134,"line_start":462,"line_end":462,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13594,"byte_end":13606,"line_start":520,"line_end":520,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15304,"byte_end":15316,"line_start":577,"line_end":577,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15718,"byte_end":15730,"line_start":591,"line_end":591,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2150,"byte_end":2153,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2163,"byte_end":2173,"line_start":96,"line_end":96,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":269}},{"kind":"Mod","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2183,"byte_end":2187,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":318}},{"kind":"Mod","span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2197,"byte_end":2205,"line_start":98,"line_end":98,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":402}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/hex.rs","byte_start":19308,"byte_end":19320,"line_start":27,"line_end":27,"column_start":44,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":9407}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/hex.rs","byte_start":20803,"byte_end":20815,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":9409}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":22611,"byte_end":22623,"line_start":11,"line_end":11,"column_start":33,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":22788,"byte_end":22800,"line_start":21,"line_end":21,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":22948,"byte_end":22960,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23061,"byte_end":23073,"line_start":37,"line_end":37,"column_start":37,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2667}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23208,"byte_end":23220,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2672}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23293,"byte_end":23305,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23519,"byte_end":23531,"line_start":56,"line_end":56,"column_start":25,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2703}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23718,"byte_end":23730,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":23891,"byte_end":23903,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2615}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24051,"byte_end":24063,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2618}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24223,"byte_end":24235,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2913}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24379,"byte_end":24391,"line_start":104,"line_end":104,"column_start":27,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impls.rs","byte_start":24547,"byte_end":24559,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":9600}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impl_serde.rs","byte_start":29268,"byte_end":29280,"line_start":9,"line_end":9,"column_start":26,"column_end":38},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":563},"to":{"krate":4,"index":2078}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impl_serde.rs","byte_start":29731,"byte_end":29740,"line_start":33,"line_end":33,"column_start":34,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":176},"to":{"krate":4,"index":1623}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/impl_serde.rs","byte_start":30390,"byte_end":30402,"line_start":58,"line_end":58,"column_start":38,"column_end":50},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":563},"to":{"krate":4,"index":1537}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":32005,"byte_end":32016,"line_start":8,"line_end":8,"column_start":44,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":522},"to":{"krate":0,"index":253}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/arr.rs","byte_start":32120,"byte_end":32122,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":259},"to":{"krate":0,"index":253}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":35990,"byte_end":36005,"line_start":12,"line_end":12,"column_start":47,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":277}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/functional.rs","byte_start":37078,"byte_end":37093,"line_start":43,"line_end":43,"column_start":41,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":39814,"byte_end":39830,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40290,"byte_end":40302,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":7466}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40672,"byte_end":40688,"line_start":64,"line_end":64,"column_start":39,"column_end":55},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":9394}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":40915,"byte_end":40931,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":41324,"byte_end":41340,"line_start":93,"line_end":93,"column_start":29,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":41983,"byte_end":41999,"line_start":118,"line_end":118,"column_start":25,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":7646}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":43701,"byte_end":43717,"line_start":198,"line_end":198,"column_start":36,"column_end":52},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":7510}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":44665,"byte_end":44681,"line_start":241,"line_end":241,"column_start":34,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":7535}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/iter.rs","byte_start":44823,"byte_end":44839,"line_start":250,"line_end":250,"column_start":30,"column_end":46},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45573,"byte_end":45578,"line_start":12,"line_end":12,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":45581,"byte_end":45593,"line_start":12,"line_end":12,"column_start":46,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":7466},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48685,"byte_end":48690,"line_start":111,"line_end":111,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":48693,"byte_end":48708,"line_start":111,"line_end":111,"column_start":39,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49881,"byte_end":49886,"line_start":152,"line_end":152,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":458}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":49889,"byte_end":49904,"line_start":152,"line_end":152,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":458}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":50955,"byte_end":50967,"line_start":190,"line_end":190,"column_start":51,"column_end":63},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":52212,"byte_end":52224,"line_start":232,"line_end":232,"column_start":50,"column_end":62},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":458}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53120,"byte_end":53135,"line_start":266,"line_end":266,"column_start":31,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":475}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":53519,"byte_end":53531,"line_start":279,"line_end":279,"column_start":38,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":475}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55321,"byte_end":55336,"line_start":343,"line_end":343,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":504}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/sequence.rs","byte_start":55702,"byte_end":55714,"line_start":357,"line_end":357,"column_start":39,"column_end":51},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":504}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2413,"byte_end":2421,"line_start":105,"line_end":105,"column_start":34,"column_end":42},"kind":"SuperTrait","from":{"krate":22,"index":719},"to":{"krate":0,"index":522}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2548,"byte_end":2553,"line_start":110,"line_end":110,"column_start":35,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":22,"index":6780},"to":{"krate":0,"index":522}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":2856,"byte_end":2876,"line_start":125,"line_end":125,"column_start":36,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":529},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3139,"byte_end":3159,"line_start":135,"line_end":135,"column_start":33,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":529},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3402,"byte_end":3421,"line_start":147,"line_end":147,"column_start":36,"column_end":55},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2637}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3685,"byte_end":3704,"line_start":157,"line_end":157,"column_start":33,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":3026}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3768,"byte_end":3772,"line_start":159,"line_end":159,"column_start":54,"column_end":58},"kind":{"Impl":{"id":37}},"from":{"krate":22,"index":6732},"to":{"krate":0,"index":522}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":3917,"byte_end":3921,"line_start":164,"line_end":164,"column_start":54,"column_end":58},"kind":{"Impl":{"id":38}},"from":{"krate":22,"index":6732},"to":{"krate":0,"index":522}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4258,"byte_end":4270,"line_start":176,"line_end":176,"column_start":50,"column_end":62},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":3016}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4329,"byte_end":4341,"line_start":177,"line_end":177,"column_start":50,"column_end":62},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":3028}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4373,"byte_end":4385,"line_start":179,"line_end":179,"column_start":22,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":3227}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":4616,"byte_end":4628,"line_start":191,"line_end":191,"column_start":25,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":3240}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":5225,"byte_end":5237,"line_start":212,"line_end":212,"column_start":28,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6188,"byte_end":6200,"line_start":245,"line_end":245,"column_start":37,"column_end":49},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":582},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":6779,"byte_end":6792,"line_start":267,"line_end":267,"column_start":28,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":7425,"byte_end":7438,"line_start":288,"line_end":288,"column_start":37,"column_end":50},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":597},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":8275,"byte_end":8287,"line_start":324,"line_end":324,"column_start":32,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":7462}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":9282,"byte_end":9294,"line_start":365,"line_end":365,"column_start":42,"column_end":54},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":11914,"byte_end":11926,"line_start":454,"line_end":454,"column_start":54,"column_end":66},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":277}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":12122,"byte_end":12134,"line_start":462,"line_end":462,"column_start":45,"column_end":57},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":13594,"byte_end":13606,"line_start":520,"line_end":520,"column_start":12,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15304,"byte_end":15316,"line_start":577,"line_end":577,"column_start":19,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/fury/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.5/src/lib.rs","byte_start":15718,"byte_end":15730,"line_start":591,"line_end":591,"column_start":12,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}}]}